{"version":3,"sources":["views/pages/StaticContent/Static.js"],"names":["useStyles","makeStyles","theme","root","padding","backgroundColor","paddingTop","margin","cell","fontSize","breakpoints","down","Static","data","index","classes","history","useHistory","useContext","AuthContext","useState","staticContentListData","setStaticContentListData","setNoOfPages","isLoading","setIsLoading","setIsCollectionLoading","idds","React","isBlock","setBlock","loader2","setloader2","setIsClear","noOfPagesAuction","setNoOfPagesAuction","setCollectionlist","setPostList","setAuctionList","setBlockUserList","pageCollection","setNoOfPagesCollectionList","pagePost","setNoOfPagesPostList","staticContentListHandler","a","Axios","method","url","Apiconfigs","staticContentList","res","responseCode","result","pages","useEffect","blockuser","userBlockUnblockAdmin","_id","headers","token","localStorage","getItem","then","toast","success","responseMessage","docs","response_message","catch","collectionList","listCollection","window","params","page","limit","response","listPostAdminHandler","postListAdmin","allAuctionListHandler","get","listAuction","listBlockAdminHandler","requestList","closeBlock","className","variant","color","style","component","Paper","align","minWidth","maxWidth","map","i","key","tbody","scope","title","description","length","dangerouslySetInnerHTML","__html","moment","createdAt","format","display","justifyContent","cursor","onClick","push","pathname","search","type","open","onClose","aria-labelledby","aria-describedby","id","status","disabled","autoFocus"],"mappings":"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","file":"static/js/52.b6d4fd40.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  IconButton,\r\n  Dialog,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n} from \"@material-ui/core\";\r\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\r\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\r\nimport { FaRegEdit } from \"react-icons/fa\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport Axios from \"axios\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { sortAddressDescription } from \"src/utils\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport { FiCopy } from \"react-icons/fi\";\r\nimport CopyToClipboard from \"react-copy-to-clipboard\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"15px\",\r\n    \"& .content\": {\r\n      backgroundColor: \"#000000\",\r\n      paddingTop: \"10px\",\r\n      margin: \"30px 0px\",\r\n    },\r\n  },\r\n  cell: {\r\n    fontSize: \"18px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Static({ data, index }) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const [staticContentListData, setStaticContentListData] = useState([]);\r\n  // console.log(\"staticContentListData\", staticContentListData);\r\n  const [page, setPage] = useState(1);\r\n  const [noOfPages, setNoOfPages] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isLoadingContent, setIsCollectionLoading] = useState(true);\r\n  const [idds, setIdd] = useState(\"\");\r\n  const [isBlock, setBlock] = React.useState(false);\r\n  const [loader2, setloader2] = React.useState(false);\r\n  const [tabview, setTabView] = useState(\"OnSale\");\r\n  const [searchUserName, setSearchUserName] = useState(\"\");\r\n  const [isClear, setIsClear] = useState(false);\r\n  const [timeFilter, setTimeFilter] = useState();\r\n  const [toTimeFilter, setToTimeFilter] = useState();\r\n  const [typeactivty, setTypeactivty] = useState(\"\");\r\n  const [pageAuction, setPageAuction] = useState(1);\r\n  const [noOfPagesAuction, setNoOfPagesAuction] = useState(1);\r\n  const [collectionlistAll, setCollectionlist] = useState([]);\r\n  const [postList, setPostList] = useState([]);\r\n  const [auctionList, setAuctionList] = useState([]);\r\n  const [blockUserList, setBlockUserList] = useState([]);\r\n  const [pageCollection, setPageCollection] = useState(1);\r\n  const [noOfPagesCollection, setNoOfPagesCollectionList] = useState(1);\r\n  const [pagePost, setPagePost] = useState(1);\r\n  const [noOfPagesPost, setNoOfPagesPostList] = useState(1);\r\n\r\n  const staticContentListHandler = async () => {\r\n    // setIsLoading(true);\r\n    try {\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.staticContentList,\r\n        // headers: {\r\n        //   token: window.localStorage.getItem(\"token\"),\r\n        // },\r\n      });\r\n\r\n      if (res.data.responseCode === 200) {\r\n        // setIsClear(false);\r\n        setStaticContentListData(res.data.result);\r\n        setNoOfPages(res.data.result.pages);\r\n      } else {\r\n        setIsClear(false);\r\n        setStaticContentListData([]);\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsClear(false);\r\n      setStaticContentListData([]);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    staticContentListHandler();\r\n  }, []);\r\n\r\n  const blockuser = async () => {\r\n    setloader2(true);\r\n    Axios({\r\n      method: \"POST\",\r\n      url: Apiconfigs.userBlockUnblockAdmin,\r\n      data: {\r\n        _id: idds,\r\n      },\r\n      headers: {\r\n        token: localStorage.getItem(\"token\"),\r\n      },\r\n    })\r\n      .then(async (res) => {\r\n        setloader2(false);\r\n        if (res.data.responseCode === 200) {\r\n          if (staticContentListHandler) {\r\n            staticContentListHandler();\r\n          }\r\n          toast.success(res.data.responseMessage);\r\n          setBlock(false);\r\n          setloader2(false);\r\n\r\n          if (res.data.result.docs) {\r\n            toast.success(res.response_message);\r\n            setloader2(false);\r\n          }\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setloader2(false);\r\n      });\r\n  };\r\n\r\n  const collectionList = async () => {\r\n    try {\r\n      const response = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.listCollection,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n        params: {\r\n          page: pageCollection,\r\n          limit: 9,\r\n        },\r\n      });\r\n      if (response.data.responseCode === 200) {\r\n        setCollectionlist(response.data.result.docs);\r\n        setNoOfPagesCollectionList(response.data.result.pages);\r\n        setIsCollectionLoading(false);\r\n      }\r\n      setIsCollectionLoading(false);\r\n    } catch (error) {\r\n      setIsCollectionLoading(false);\r\n    }\r\n  };\r\n  const listPostAdminHandler = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.postListAdmin,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n        params: {\r\n          limit: 9,\r\n          page: pagePost,\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setPostList(res.data.result.docs);\r\n        setNoOfPagesPostList(res.data.result.pages);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const allAuctionListHandler = async () => {\r\n    try {\r\n      const res = await Axios.get(Apiconfigs.listAuction, {\r\n        params: {\r\n          limit: 10,\r\n          page: noOfPagesAuction,\r\n        },\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setAuctionList(res.data.result.docs);\r\n        setNoOfPagesAuction(res.data.result.pages);\r\n      }\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const listBlockAdminHandler = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.requestList,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setBlockUserList(res.data.result);\r\n        // setNoOfPages(res.data.result.pages);\r\n\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    collectionList();\r\n    listPostAdminHandler();\r\n    allAuctionListHandler();\r\n    listBlockAdminHandler();\r\n  }, [pageCollection, pagePost, noOfPagesAuction]);\r\n  const clearHandler = () => {\r\n    setTimeFilter();\r\n    setToTimeFilter();\r\n    setTypeactivty(\"\");\r\n    setSearchUserName(\"\");\r\n    setIsClear(true);\r\n    // staticContentListHandler();\r\n  };\r\n  const closeBlock = () => {\r\n    setBlock(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Paper className={classes.root}>\r\n        <Box className=\"heading\">\r\n          <Typography\r\n            variant=\"h3\"\r\n            color=\"primary.main\"\r\n            style={{ color: \"#e6e5e8\" }}\r\n          >\r\n            Static Data\r\n          </Typography>\r\n          {/* <Box align=\"right\">\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              onClick={() => history.push(\"/add-static-content\")}\r\n            >\r\n              <AddBoxIcon />\r\n              &nbsp; Add Content\r\n            </Button>\r\n          </Box> */}\r\n        </Box>\r\n        <Box className=\"content\">\r\n          <Box>\r\n            {isLoading ? (\r\n              <DataLoading  />\r\n            ) : (\r\n              <TableContainer>\r\n                <Table>\r\n                  <TableHead component={Paper} className=\"headingcell\">\r\n                    <TableRow>\r\n                      <TableCell align=\"Center\" className={classes.cell}>\r\n                        Sr.No.\r\n                      </TableCell>\r\n                      <TableCell align=\"Center\"  style={{minWidth:'150px'}}className={classes.cell} >\r\n                        Title\r\n                      </TableCell>\r\n                      <TableCell align=\"center\" style={{maxWidth:'350px'}} >\r\n                        Description\r\n                      </TableCell>\r\n                      <TableCell align=\"Center\" style={{minWidth:'150px'}} className={classes.cell}>\r\n                        Registration Date\r\n                      </TableCell>\r\n                      <TableCell align=\"Center\" className={classes.cell}>\r\n                        Action\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  {staticContentListData?.map((data, i) => {\r\n                    return (\r\n                      <TableBody key={i}>\r\n                        <TableRow className={classes.tbody}>\r\n                          <TableCell align=\"Center\" component=\"th\" scope=\"row\">\r\n                            {i + 1}\r\n                          </TableCell>\r\n                          <TableCell align=\"Center\">{data?.title}</TableCell>\r\n                          <TableCell align=\"Center\">\r\n                            {data?.description?.length <= 50 ? (\r\n                              <label\r\n                                dangerouslySetInnerHTML={{\r\n                                  __html: data?.description,\r\n                                }}\r\n                              ></label>\r\n                            ) : data?.description.length > 50 ? (\r\n                              <label\r\n                                // style={{\r\n                                //   wordBreak: \"break-all\",\r\n                                // }}\r\n                                dangerouslySetInnerHTML={{\r\n                                  __html: data?.description,\r\n                                }}\r\n                              ></label>\r\n                            ) : (\r\n                              \"\"\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell align=\"Center\">\r\n                            {moment(data?.createdAt).format(\"DD-MM-YYYY\")}\r\n                          </TableCell>\r\n                          <TableCell align=\"Center\">\r\n                            <Box\r\n                              style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"space-evenly\",\r\n                                cursor: \"pointer\",\r\n                              }}\r\n                            >\r\n                              {/* <Button\r\n                                // variant=\"contained\"\r\n                                onClick={() =>\r\n                                  history.push({\r\n                                    pathname: \"/about-creators\",\r\n                                    search: data._id,\r\n                                  })\r\n                                }\r\n                                color=\"primary\"\r\n                              >\r\n                                <FaRegEdit />\r\n                              </Button> */}\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                onClick={() =>\r\n                                  history.push({\r\n                                    pathname: \"/edit-static-content\",\r\n                                    search: data?.type,\r\n                                  })\r\n                                }\r\n                                color=\"primary\"\r\n                              >\r\n                                <FaRegEdit />\r\n                              </Button>\r\n                              &nbsp;\r\n                              <Button\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                // className={classes.button}\r\n                                onClick={() =>\r\n                                  history.push({\r\n                                    pathname: \"/static-content-details\",\r\n                                    search: data?.type,\r\n                                  })\r\n                                }\r\n                              >\r\n                                <VisibilityIcon />\r\n                              </Button>\r\n                            </Box>\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    );\r\n                  })}\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n            {!isLoading &&\r\n              staticContentListData &&\r\n              staticContentListData.length === 0 && <NoDataFound />}\r\n          </Box>\r\n        </Box>\r\n        <Dialog\r\n          open={isBlock}\r\n          onClose={closeBlock}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {/* {row.status} */}\r\n              {`Are you sure  to ${\r\n                idds.status === \"BLOCK\" ? \"ACTIVE\" : \"DELETE\"\r\n              } this user?`}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button color=\"primary\" disabled={loader2} onClick={blockuser}>\r\n              Yes {loader2 && <ButtonCircularProgress />}\r\n            </Button>\r\n            <Button onClick={closeBlock} color=\"primary\" autoFocus>\r\n              No\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Static;\r\n"],"sourceRoot":""}