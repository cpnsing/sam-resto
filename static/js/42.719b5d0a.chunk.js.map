{"version":3,"sources":["views/pages/StaticPage/TransactionHistory.js","component/Page.js"],"names":["useStyles","makeStyles","theme","root","padding","backgroundColor","borderRadius","display","alignItems","justifyContent","cell","fontSize","breakpoints","down","currenciesUser","value","label","TransactionHistory","data","index","classes","auth","useContext","AuthContext","useState","transactionListData","setTransactionList","page","setPage","noOfPages","setNoOfPages","isLoading","setIsLoading","isClear","setIsClear","timeFilter","setTimeFilter","toTimeFilter","setToTimeFilter","typeactivty","setTypeactivty","transactionListDataDownload","setTransactionListDownload","transactionhistory","a","Axios","method","url","userData","userType","Apiconfigs","adminTransactionList","transactionList","headers","token","window","localStorage","getItem","params","limit","fromDate","moment","toDate","transactionType","res","responseCode","result","docs","map","i","Sno","Paymentdate","createdAt","format","Coinname","Token","amount","Transactiontype","Transactionstatus","transactionStatus","pages","useEffect","title","className","variant","length","onClick","workSheet","XLSX","json_to_sheet","workBook","book_new","book_append_sheet","bookType","type","style","color","marginRight","cursor","mb","container","spacing","item","xs","sm","md","lg","mt","onChange","date","Date","disableFuture","margin","helperText","name","fullWidth","minDate","marginTop","maxHeight","labelId","id","e","target","disableScrollLock","option","key","size","marginLeft","component","Paper","align","tbody","scope","commission","tokenName","count","v","Page","props","children"],"mappings":"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","file":"static/js/42.719b5d0a.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Container,\r\n  Button,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { FaCopy } from \"react-icons/fa\";\r\nimport { GrEdit } from \"react-icons/gr\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { AiOutlineDownload } from \"react-icons/ai\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport Axios from \"axios\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\nimport moment from \"moment\";\r\nimport { tokenName } from \"src/utils\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\nimport Page from \"../../../component/Page\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"15px\",\r\n    \"& .content\": {\r\n      backgroundColor: \"#101010\",\r\n      borderRadius: \"15px\",\r\n      // width: \"100%\",\r\n      padding: \"15px\",\r\n      \"& .heading\": {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        padding: \"15px 0px 30px\",\r\n      },\r\n    },\r\n  },\r\n  cell: {\r\n    fontSize: \"16px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n\r\n}));\r\n\r\nconst currenciesUser = [\r\n  {\r\n    value: \"BUY_AUCTION\",\r\n    label: \"Buy Auction\",\r\n  },\r\n  {\r\n    value: \"SOLD_AUCTION\",\r\n    label: \"Sold Auction\",\r\n  },\r\n  {\r\n    value: \"BUY_POST\",\r\n    label: \"Buy Post\",\r\n  },\r\n  {\r\n    value: \"SOLD_POST\",\r\n    label: \"Sold Post\",\r\n  },\r\n  {\r\n    value: \"COLLECTION_SHARE_AMOUNT\",\r\n    label: \"Collection Share Amount\",\r\n  },\r\n  {\r\n    value: \"COLLECTION_RECEIVE_AMOUNT\",\r\n    label: \"Collection Receive Amount\",\r\n  },\r\n  {\r\n    value: \"COLLECTION_SUBSCRIBE_RECEIVE\",\r\n    label: \"Collection Subscribe Recieved\",\r\n  },\r\n];\r\n\r\nfunction TransactionHistory({ data, index }) {\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n  const [transactionListData, setTransactionList] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [noOfPages, setNoOfPages] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isClear, setIsClear] = useState(false);\r\n  const [timeFilter, setTimeFilter] = useState();\r\n  const [toTimeFilter, setToTimeFilter] = useState();\r\n  const [typeactivty, setTypeactivty] = useState(\"All\");\r\n  const [transactionListDataDownload, setTransactionListDownload] = useState(\r\n    []\r\n  );\r\n  // console.log(\"transactionListDataDownload\", transactionListDataDownload);\r\n  const transactionhistory = async () => {\r\n    try {\r\n      // setIsLoading(true);\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: auth?.userData?.userType === \"Admin\" ? Apiconfigs.adminTransactionList : Apiconfigs.transactionList,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n        params: {\r\n          limit: 10,\r\n          page: page,\r\n          fromDate: timeFilter ? `${moment(timeFilter)}` : null,\r\n          toDate: toTimeFilter ? `${moment(toTimeFilter)}` : null,\r\n          transactionType: typeactivty === \"All\" ? null : typeactivty,\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setIsClear(false);\r\n        setTransactionList(res.data.result.docs);\r\n        setTransactionListDownload(\r\n          res.data.result.docs.map((data, i) => {\r\n            return {\r\n              Sno: i + 1,\r\n              Paymentdate: moment(data?.createdAt).format(\"lll\"),\r\n              Coinname: \"BNB\",\r\n              Token: data?.amount,\r\n              Transactiontype: data?.transactionType,\r\n              Transactionstatus: data?.transactionStatus,\r\n            };\r\n          })\r\n        );\r\n\r\n        setNoOfPages(res.data.result.pages);\r\n      }\r\n      setIsClear(false);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsClear(false);\r\n      setTransactionList([]);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    transactionhistory();\r\n  }, [isClear, page]);\r\n  const clearHandler = () => {\r\n    transactionhistory();\r\n    setTimeFilter();\r\n    setToTimeFilter();\r\n    setTypeactivty(\"All\");\r\n    setIsClear(true);\r\n  };\r\n\r\n  const downloadExcel = () => {\r\n    const workSheet = XLSX.utils.json_to_sheet(transactionListDataDownload);\r\n    const workBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, \"transaction-list\");\r\n    let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n    XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n    XLSX.writeFile(workBook, \"transaction_list.xlsx\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Page title=\"Transaction History \">\r\n        <Paper className={classes.root}>\r\n          <Box className=\"content\">\r\n            <Box className=\"heading\">\r\n              <Typography variant=\"h3\">All Transactions</Typography>\r\n              {transactionListData && transactionListData?.length > 0 && (\r\n                <AiOutlineDownload\r\n                  onClick={downloadExcel}\r\n                  style={{\r\n                    color: \"#e31a89\",\r\n                    marginRight: \"10px\",\r\n                    fontSize: \"32px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                />\r\n              )}\r\n            </Box>\r\n            <Box mb={3}>\r\n              <Grid container spacing={2} alignItems=\"center\">\r\n                <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                  <Typography\r\n                    variant=\"boay2\"\r\n                    style={{ color: \"#cfc8c8\" }}\r\n                  // color=\"primary.main\"\r\n                  >\r\n                    From\r\n                  </Typography>\r\n                  <Box mt={1}>\r\n                    <KeyboardDatePicker\r\n                      value={timeFilter}\r\n                      onChange={(date) => {\r\n                        setTimeFilter(new Date(date));\r\n                      }}\r\n                      // maxDate={toTimeFilter ? toTimeFilter : \"\"}\r\n                      format=\"DD/MM/YYYY\"\r\n                      // inputVariant=\"outlined\"\r\n                      disableFuture\r\n                      margin=\"dense\"\r\n                      variant=\"outlined\"\r\n                      helperText=\"\"\r\n                      name=\"dob\"\r\n                      fullWidth\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                  <Typography\r\n                    variant=\"boay2\"\r\n                    style={{ color: \"#cfc8c8\" }}\r\n                  // color=\"primary.main\"\r\n                  >\r\n                    To\r\n                  </Typography>\r\n                  <Box mt={1}>\r\n                    <KeyboardDatePicker\r\n                      variant=\"outlined\"\r\n                      value={toTimeFilter}\r\n                      onChange={(date) => {\r\n                        setToTimeFilter(new Date(date));\r\n                      }}\r\n                      minDate={timeFilter}\r\n                      //   maxDate={moment(toTimeFilter).format(\"YYYY-MM-DDThh:mm\")}\r\n                      format=\"DD/MM/YYYY\"\r\n                      // inputVariant=\"outlined\"\r\n                      disableFuture\r\n                      margin=\"dense\"\r\n                      helperText=\"\"\r\n                      name=\"dob\"\r\n                      fullWidth\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                  <Typography variant=\"body2\" style={{ color: \"#cfc8c8\" }}>\r\n                    By Type\r\n                  </Typography>\r\n                  <Box style={{ marginTop: \"5px\" }}>\r\n                    <FormControl fullWidth>\r\n                      <Select\r\n                        style={{ maxHeight: \"48px\", marginTop: \"-1px\" }}\r\n                        labelId=\"demo-select-small\"\r\n                        id=\"demo-select-small\"\r\n                        onChange={(e) => setTypeactivty(e.target.value)}\r\n                        value={typeactivty}\r\n                      >\r\n                        <MenuItem disableScrollLock={true} value={\"All\"}>\r\n                          All\r\n                        </MenuItem>\r\n                        {currenciesUser.map((option, i) => (\r\n                          <MenuItem\r\n                            disableScrollLock={true}\r\n                            key={i}\r\n                            value={option.value}\r\n                          >\r\n                            {option.label}\r\n                          </MenuItem>\r\n                        ))}\r\n                      </Select>\r\n                    </FormControl>\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                  <Box mt={3}>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={transactionhistory}\r\n                      color=\"secondary\"\r\n                      size=\"large\"\r\n                      style={{ marginRight: \"8px\" }}\r\n                    >\r\n                      Submit\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      onClick={clearHandler}\r\n                      color=\"secondary\"\r\n                      size=\"large\"\r\n                      style={{ marginLeft: \"8px\" }}\r\n                    >\r\n                      Clear\r\n                    </Button>\r\n                    {/* <Button\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      size=\"large\"\r\n                      onClick={downloadExcel}\r\n                      style={{ marginLeft: \"8px\" }}\r\n                    >\r\n                      Download CSV\r\n                    </Button> */}\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n            {isLoading ? (\r\n              <DataLoading />\r\n            ) : (\r\n              <TableContainer>\r\n                <Table>\r\n                  <TableHead component={Paper} className=\"headingcell\">\r\n                    <TableRow>\r\n                      <TableCell align=\"Center\" className={classes.cell}>\r\n                        Sr.No\r\n                      </TableCell>\r\n                      <TableCell align=\"Center\" className={classes.cell}>\r\n                        Payment Date\r\n                      </TableCell>\r\n                      {auth?.userData?.userType !== \"Admin\" &&\r\n                        <TableCell align=\"Center\" className={classes.cell}>\r\n                          Commission\r\n                        </TableCell>\r\n                      }\r\n\r\n                      <TableCell align=\"Center\" className={classes.cell}>\r\n                        Transaction Type\r\n                      </TableCell>\r\n\r\n                      <TableCell align=\"Center\" className={classes.cell}>\r\n                        Status\r\n                      </TableCell>\r\n                      <TableCell align=\"Center\" className={classes.cell}>\r\n                        Amount\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  {transactionListData?.map((data, i) => {\r\n                    return (\r\n                      <TableBody key={i}>\r\n                        <TableRow className={classes.tbody}>\r\n                          <TableCell align=\"Center\" component=\"th\" scope=\"row\">\r\n                            {i + 1}\r\n                          </TableCell>\r\n                          <TableCell align=\"Center\">\r\n                            {moment(data?.createdAt).format(\r\n                              \"DD:MM:YYYY hh:mm A\"\r\n                            )}\r\n                          </TableCell>\r\n                          {auth?.userData?.userType !== \"Admin\" &&\r\n                            <TableCell align=\"Center\">{`${data?.commission ? data?.commission : 0} Share`}</TableCell>\r\n\r\n                          }\r\n                          <TableCell align=\"Center\">\r\n                            {data?.transactionType}\r\n                          </TableCell>\r\n                          <TableCell align=\"Center\">\r\n                            {data?.transactionStatus}\r\n                          </TableCell>\r\n                          <TableCell align=\"Center\">\r\n                            {data?.amount}&nbsp;\r\n                            {tokenName}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableBody>\r\n                    );\r\n                  })}\r\n                </Table>\r\n              </TableContainer>\r\n            )}\r\n            {!isLoading &&\r\n              transactionListData &&\r\n              transactionListData.length === 0 && <NoDataFound />}\r\n\r\n            {/* {transactionListData && transactionListData.length >=10 && ( */}\r\n            <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n              <Pagination\r\n                count={noOfPages}\r\n                page={page}\r\n                onChange={(e, v) => setPage(v)}\r\n              />\r\n            </Box>\r\n            {/* )} */}\r\n          </Box>\r\n        </Paper>\r\n      </Page>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TransactionHistory;\r\n","import { Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nexport default function Page(props) {\r\n  const { title, children } = props;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      <Container>{children}</Container>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}