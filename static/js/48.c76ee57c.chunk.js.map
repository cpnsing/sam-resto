{"version":3,"sources":["component/TransactionData.js"],"names":["useStyles","makeStyles","theme","root","position","bottom","right","width","margin","borderRadius","overflow","breakpoints","down","height","display","alignItems","justifyContent","marginTop","border","maxWidth","marginLeft","padding","textOverflow","backgroundColor","main","paddingBottom","cell","fontSize","currenciesUser","value","label","TransactionHistory","data","index","classes","useState","transactionListData","setTransactionList","transactionListDataDownload","setTransactionListDownload","page","setPage","noOfPages","setNoOfPages","isLoading","setIsLoading","isClear","setIsClear","timeFilter","setTimeFilter","toTimeFilter","setToTimeFilter","typeactivty","setTypeactivty","console","log","transactionhistory","a","Axios","method","url","Apiconfigs","walletTransactionList","headers","token","window","localStorage","getItem","params","limit","fromDate","moment","toDate","transactionType","res","responseCode","result","docs","map","i","Sno","Paymentdate","createdAt","Coinname","Amount","amount","Transactiontype","Transactionstatus","transactionStatus","pages","useEffect","className","align","length","onClick","workSheet","XLSX","json_to_sheet","workBook","book_new","book_append_sheet","bookType","type","style","color","marginRight","cursor","mt","mb","container","spacing","item","xs","sm","md","lg","variant","onChange","date","Date","format","disableFuture","helperText","name","fullWidth","minDate","maxHeight","labelId","id","e","target","disableScrollLock","option","key","size","component","Paper","tbody","scope","sortAddress","toAddress","fromAddress","tokenName","commission","count","v"],"mappings":"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","file":"static/js/48.c76ee57c.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Container,\r\n  Button,\r\n  IconButton,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { sortAddress } from \"src/utils\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport { FaCopy } from \"react-icons/fa\";\r\nimport { GrEdit } from \"react-icons/gr\";\r\nimport { AiOutlineDownload } from \"react-icons/ai\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport Axios from \"axios\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\nimport moment from \"moment\";\r\nimport { tokenName } from \"src/utils\";\r\nimport { KeyboardDatePicker } from \"@material-ui/pickers\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .imgbox\": {\r\n      position: \"relative\",\r\n      \"& .editicon\": {\r\n        position: \"absolute\",\r\n        bottom: \"10px\",\r\n        right: \"10px\",\r\n      },\r\n      \"& .postImg\": {\r\n        width: \"100%\",\r\n        margin: \"16px 0\",\r\n        borderRadius: \"20px 20px 0px 0px\",\r\n        overflow: \"hidden\",\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n          borderRadius: \"8px 8px 0px 0px\",\r\n        },\r\n        \"& img\": {\r\n          width: \"100%\",\r\n          height: \"250px\",\r\n          \"@media(max-width:767px)\": {\r\n            height: \"130px\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    \"& .userProfile\": {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"left\",\r\n      marginTop: \"-20px\",\r\n      \"& figure\": {\r\n        borderRadius: \"50%\",\r\n        border: \"2px solid #f1f1f1\",\r\n        maxWidth: \"150px\",\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        position: \"relative\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        margin: \"0 auto 13px\",\r\n        \"@media(max-width:767px)\": {\r\n          maxWidth: \"75px\",\r\n        },\r\n      },\r\n      \"& .editprofile\": {\r\n        position: \"absolute\",\r\n        bottom: \"-40px\",\r\n        right: \"-10px\",\r\n      },\r\n      \"& .user\": {\r\n        position: \"absolute\",\r\n        marginLeft: \"15px\",\r\n        \"& img\": {\r\n          width: \"100%\",\r\n        },\r\n      },\r\n    },\r\n    \"& .username\": {\r\n      marginTop: \"75px\",\r\n      marginLeft: \"25px\",\r\n      \"@media(max-width:767px)\": {\r\n        marginTop: \"45px\",\r\n      },\r\n      \"& p\": {\r\n        padding: \"5px 0px\",\r\n        overflow: \"hidden\",\r\n        maxWidth: \"150px\",\r\n        textOverflow: \"ellipsis\",\r\n      },\r\n    },\r\n    \"& .buttonbox\": {\r\n      \"& Button\": {\r\n        margin: \"0px 15px\",\r\n      },\r\n    },\r\n    \"& .detail\": {\r\n      margin: \"15px\",\r\n      padding: \"15px\",\r\n      backgroundColor: \"#101010\",\r\n    },\r\n  },\r\n  main: {\r\n    padding: \"0px 5px 0px 5px\",\r\n    \"& .content\": {\r\n      backgroundColor: \"#101010\",\r\n      // width: \"100%\",\r\n      padding: \"0px 5px 0px 5px\",\r\n      \"& .heading\": {\r\n        paddingBottom: \"15px\",\r\n      },\r\n    },\r\n  },\r\n  cell: {\r\n    fontSize: \"16px\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n}));\r\nconst currenciesUser = [\r\n  {\r\n    value: \"DEPOSIT_FOR_ADMIN\",\r\n    label: \"DEPOSIT\",\r\n  },\r\n  {\r\n    value: \"WITHDRAW_FOR_ADMIN\",\r\n    label: \"WITHDRAW\",\r\n  },\r\n];\r\nfunction TransactionHistory({ data, index }) {\r\n  const classes = useStyles();\r\n  const [transactionListData, setTransactionList] = useState([]);\r\n  const [transactionListDataDownload, setTransactionListDownload] = useState(\r\n    []\r\n  );\r\n  // console.log();\r\n  const [page, setPage] = useState(1);\r\n  const [noOfPages, setNoOfPages] = useState(1);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isClear, setIsClear] = useState(false);\r\n  const [timeFilter, setTimeFilter] = useState();\r\n  const [toTimeFilter, setToTimeFilter] = useState();\r\n  const [typeactivty, setTypeactivty] = useState(\"All\");\r\n  const [searchUserName, setSearchUserName] = useState(\"\");\r\n  console.log(\r\n    \"transactionListDataDownload\",\r\n    transactionListDataDownload,\r\n    transactionListData\r\n  );\r\n  //   const [loading, setLoading] = useState(false);\r\n  //   const [page, setPage] = useState(1);\r\n  //   const [noOfPages, setNoOfPages] = useState(1);\r\n  const transactionhistory = async () => {\r\n    try {\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.walletTransactionList,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n        params: {\r\n          limit: 10,\r\n          page: page,\r\n          fromDate: timeFilter ? `${moment(timeFilter)}` : null,\r\n          toDate: toTimeFilter ? `${moment(toTimeFilter)}` : null,\r\n          transactionType: typeactivty === \"All\" ? null : typeactivty,\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setTransactionList(res.data.result.docs);\r\n        setTransactionListDownload(\r\n          res.data.result.docs.map((data, i) => {\r\n            return {\r\n              Sno: i + 1,\r\n              Paymentdate: data?.createdAt,\r\n              Coinname: \"ETH\",\r\n              Amount: data?.amount,\r\n              Transactiontype: data?.transactionType,\r\n              Transactionstatus: data?.transactionStatus,\r\n            };\r\n          })\r\n        );\r\n        setNoOfPages(res.data.result.pages);\r\n        setIsClear(false);\r\n      }\r\n      setIsClear(false);\r\n\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsClear(false);\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    transactionhistory();\r\n  }, [isClear, page]);\r\n  const clearHandler = () => {\r\n    transactionhistory();\r\n    setTimeFilter();\r\n    setToTimeFilter();\r\n    setTypeactivty(\"All\");\r\n    setIsClear(true);\r\n  };\r\n\r\n  const downloadExcel = () => {\r\n    const workSheet = XLSX.utils.json_to_sheet(transactionListDataDownload);\r\n    const workBook = XLSX.utils.book_new();\r\n    XLSX.utils.book_append_sheet(workBook, workSheet, \"transaction-list\");\r\n    let buf = XLSX.write(workBook, { bookType: \"xlsx\", type: \"buffer\" });\r\n    XLSX.write(workBook, { bookType: \"xlsx\", type: \"binary\" });\r\n    XLSX.writeFile(workBook, \"user_list.xlsx\");\r\n  };\r\n\r\n  // useEffect(()=>{\r\n  //   if(typeactivty)\r\n  // },[])\r\n  return (\r\n    <>\r\n      <Box className={classes.main}>\r\n        <Box align=\"right\">\r\n          {transactionListDataDownload &&\r\n            transactionListDataDownload?.length > 0 && (\r\n              <AiOutlineDownload\r\n                onClick={downloadExcel}\r\n                style={{\r\n                  color: \"#e31a89\",\r\n                  marginRight: \"10px\",\r\n                  fontSize: \"32px\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              />\r\n            )}\r\n        </Box>\r\n        <Box className=\"content\">\r\n          <Box mt={4} mb={4}>\r\n            <Grid container spacing={2} alignItems=\"center\">\r\n              <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                <Typography\r\n                  variant=\"boay2\"\r\n                  style={{ color: \"#cfc8c8\" }}\r\n                // color=\"primary.main\"\r\n                >\r\n                  From Date:\r\n                </Typography>\r\n                <Box mt={1}>\r\n                  <KeyboardDatePicker\r\n                    value={timeFilter}\r\n                    onChange={(date) => {\r\n                      setTimeFilter(new Date(date));\r\n                    }}\r\n                    // maxDate={toTimeFilter ? toTimeFilter : \"\"}\r\n                    format=\"DD/MM/YYYY\"\r\n                    // inputVariant=\"outlined\"\r\n                    disableFuture\r\n                    margin=\"dense\"\r\n                    variant=\"outlined\"\r\n                    helperText=\"\"\r\n                    name=\"dob\"\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                <Typography\r\n                  variant=\"boay2\"\r\n                  style={{ color: \"#cfc8c8\" }}\r\n                // color=\"primary.main\"\r\n                >\r\n                  To Date:\r\n                </Typography>\r\n                <Box mt={1}>\r\n                  <KeyboardDatePicker\r\n                    variant=\"outlined\"\r\n                    value={toTimeFilter}\r\n                    onChange={(date) => {\r\n                      setToTimeFilter(new Date(date));\r\n                    }}\r\n                    minDate={timeFilter}\r\n                    //   maxDate={moment(toTimeFilter).format(\"YYYY-MM-DDThh:mm\")}\r\n                    format=\"DD/MM/YYYY\"\r\n                    // inputVariant=\"outlined\"\r\n                    disableFuture\r\n                    margin=\"dense\"\r\n                    helperText=\"\"\r\n                    name=\"dob\"\r\n                    fullWidth\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                <Typography\r\n                  variant=\"boay2\"\r\n                  style={{ color: \"#cfc8c8\", marginTop: \"-2px\" }}\r\n                // color=\"primary.main\"\r\n                >\r\n                  By Type:\r\n                </Typography>\r\n                <Box style={{ marginTop: \"5px\" }}>\r\n                  <FormControl fullWidth>\r\n                    <Select\r\n                      style={{ maxHeight: \"48px\", marginTop: \"-1px\" }}\r\n                      labelId=\"demo-select-small\"\r\n                      id=\"demo-select-small\"\r\n                      //   value={age}\r\n                      //   variant=\"outlined\"\r\n                      onChange={(e) => setTypeactivty(e.target.value)}\r\n                      value={typeactivty}\r\n                    >\r\n                      <MenuItem disableScrollLock={true} value={\"All\"}>\r\n                        All\r\n                      </MenuItem>\r\n                      {currenciesUser.map((option, i) => (\r\n                        <MenuItem\r\n                          disableScrollLock={true}\r\n                          key={i}\r\n                          value={option.value}\r\n                        >\r\n                          {option.label}\r\n                        </MenuItem>\r\n                      ))}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Box>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} md={3} lg={3}>\r\n                <Box mt={3}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={transactionhistory}\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    style={{ marginRight: \"8px\" }}\r\n                  >\r\n                    Submit\r\n                  </Button>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    onClick={clearHandler}\r\n                    color=\"secondary\"\r\n                    size=\"large\"\r\n                    style={{ marginLeft: \"8px\" }}\r\n                  >\r\n                    Clear\r\n                  </Button>\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          &nbsp;\r\n          {isLoading ? (\r\n            <DataLoading />\r\n          ) : (\r\n            <TableContainer>\r\n              <Table style={{width:\"100% !important\"}}>\r\n                <TableHead component={Paper} className=\"headingcell\">\r\n                  <TableRow>\r\n                    <TableCell align=\"Center\" className={classes.cell}>\r\n                      Sr.No.\r\n                    </TableCell>\r\n                    {/* <TableCell align=\"Center\" className={classes.cell}>\r\n                      Payment Date\r\n                    </TableCell> */}\r\n\r\n                    {/* <TableCell align=\"Center\" className={classes.cell}>\r\n                      Transaction Type\r\n                    </TableCell> */}\r\n                    <TableCell align=\"Center\" className={classes.cell}>\r\n                      To Address\r\n                    </TableCell>\r\n                    <TableCell align=\"Center\" className={classes.cell}>\r\n                      From Address\r\n                    </TableCell>\r\n                    <TableCell align=\"Center\" className={classes.cell}>\r\n                      Amount\r\n                    </TableCell>\r\n                    <TableCell align=\"Center\" className={classes.cell}>\r\n                      Trx Fee\r\n                    </TableCell>\r\n                    <TableCell align=\"Center\" className={classes.cell}>\r\n                      Date and Time\r\n                    </TableCell>\r\n                    <TableCell align=\"Center\" className={classes.cell}>\r\n                      Status\r\n                    </TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                {transactionListData?.map((data, i) => {\r\n                  return (\r\n                    <TableBody key={i}>\r\n                      <TableRow className={classes.tbody}>\r\n                        <TableCell align=\"Center\" component=\"th\" scope=\"row\">\r\n                          {i + 1}\r\n                        </TableCell>\r\n                        <TableCell align=\"Center\">\r\n                          {sortAddress(data?.toAddress)}\r\n                        </TableCell>\r\n                        <TableCell align=\"Center\">\r\n                          {sortAddress(data?.fromAddress)}\r\n                        </TableCell>\r\n\r\n                        <TableCell align=\"Center\">\r\n                          {data?.amount}&nbsp;\r\n                          {tokenName}\r\n                        </TableCell>\r\n                        <TableCell align=\"Center\">\r\n                          {data?.commission}\r\n                        </TableCell>\r\n                        <TableCell align=\"Center\">\r\n                          {moment(data?.createdAt).format(\"DD:MM:YYYY hh:mm A\")}\r\n                        </TableCell>\r\n                        <TableCell align=\"Center\">\r\n                          {data?.transactionStatus}\r\n                        </TableCell>\r\n\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  );\r\n                })}\r\n              </Table>\r\n            </TableContainer>\r\n          )}\r\n          {!isLoading &&\r\n            transactionListData &&\r\n            transactionListData.length === 0 && <NoDataFound />}\r\n          {transactionListData && transactionListData.length >= 10 && (\r\n            <Box mt={2} display=\"flex\" justifyContent=\"center\">\r\n              <Pagination\r\n                count={noOfPages}\r\n                page={page}\r\n                onChange={(e, v) => setPage(v)}\r\n              />\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      </Box>\r\n      {/* </Paper> */}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TransactionHistory;\r\n"],"sourceRoot":""}