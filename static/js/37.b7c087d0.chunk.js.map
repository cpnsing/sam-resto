{"version":3,"sources":["views/auth/Verify-Otp/VerifyOtp.js","component/Page.js"],"names":["props","useState","Array","fill","history","useHistory","useLocation","isloading","formValidationSchema","yep","shape","otp","max","required","makeStyles","theme","width","height","textAlign","marginLeft","border","borderRadius","fontSize","useStyles","isLoading","setIsLoading","errorMessage","setErrorMesage","verifyOTP","values","a","axios","method","url","ApiConfig","verifyOtp","data","email","window","sessionStorage","getItem","responseCode","toast","success","push","response","responseMessage","resendOTP","resendOtp","maxWidth","title","mt","mb","variant","className","elevation","style","padding","onSubmit","initialValues","validationSchema","errors","handleBlur","handleChange","touched","handleSubmit","setFieldValue","fullWidth","type","placeholder","size","name","maxLength","value","error","Boolean","onBlur","onChange","ml","color","fontWeight","disabled","align","cursor","onClick","Page","children"],"mappings":"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","file":"static/js/37.b7c087d0.chunk.js","sourcesContent":["import {\r\n  Typography,\r\n  Box,\r\n  FormControl,\r\n  Button,\r\n  FormHelperText,\r\n  TextField,\r\n  Link,\r\n  IconButton,\r\n  InputAdornment,\r\n  OutlinedInput,\r\n  makeStyles,\r\n  Container,\r\n  Paper,\r\n} from \"@material-ui/core\";\r\nimport React, { useState, useContext } from \"react\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport { Formik, Form } from \"formik\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport * as yep from \"yup\";\r\nimport Page from \"src/component/Page\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport axios from \"axios\";\r\nimport ApiConfig from \"src/ApiConfig/ApiConfig\";\r\nimport { values } from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function (props) {\r\n  const [otp, setOtp] = useState(new Array(4).fill(\"\"));\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [isloading, setLoader] = useState(false);\r\n  const formInitialSchema = {\r\n    otp: \"\",\r\n    email: \"\",\r\n  };\r\n  const formValidationSchema = yep.object().shape({\r\n    otp: yep\r\n      .string()\r\n      .max(4, \"Only 4 digits are valid\")\r\n      .required(\"OTP is required\"),\r\n  });\r\n  const useStyles = makeStyles((theme) => ({\r\n    otp: {\r\n      width: 30,\r\n      height: 35,\r\n      textAlign: \"center\",\r\n      marginLeft: 10,\r\n      // marginBottom: 10,\r\n      border: \"0.8px solid\",\r\n      borderRadius: \"3px\",\r\n      fontSize: 20,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [errorMessage, setErrorMesage] = useState();\r\n\r\n  const verifyOTP = async (values) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const res = await axios({\r\n        method: \"PUT\",\r\n        url: ApiConfig.verifyOtp,\r\n        data: {\r\n          otp: values.otp,\r\n          email: window.sessionStorage.getItem(\"email\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setIsLoading(false);\r\n        toast.success(\"otp verify succefully\");\r\n        history.push(\"/reset-password\");\r\n        // window.sessionStorage.setItem(\"otp\", values.otp);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setErrorMesage(error?.response?.data?.responseMessage);\r\n    }\r\n  };\r\n  const resendOTP = async () => {\r\n    // setIsLoading(true);\r\n    try {\r\n      const res = await axios({\r\n        method: \"POST\",\r\n        url: ApiConfig.resendOtp,\r\n        data: {\r\n          email: window.sessionStorage.getItem(\"email\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setIsLoading(false);\r\n        toast.success(\"resend otp successfully\");\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      setErrorMesage(error?.response?.data?.responseMessage);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"sm\">\r\n        <Page title=\"Verify OTP\">\r\n          <Box textAlign=\"center\" mt={5} mb={5}>\r\n            <Typography variant=\"h2\">Verify OTP</Typography>\r\n            <Box mt={2}>\r\n              <Typography variant=\"h6\">\r\n              Please Enter The Verification Code Send To Your Email\r\n                        Address Or Mobile Number\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            className=\"coin_list\"\r\n            elevation={2}\r\n            style={{ padding: \"25px\", textAlign: \"center\" }}\r\n          >\r\n            <Formik\r\n              onSubmit={(values) => verifyOTP(values)}\r\n              // noValidate onSubmit={handleSubmit}\r\n              initialValues={formInitialSchema}\r\n              validationSchema={formValidationSchema}\r\n            >\r\n              {({\r\n                errors,\r\n                handleBlur,\r\n                handleChange,\r\n                handleSubmit,\r\n                touched,\r\n                values,\r\n                setFieldValue,\r\n              }) => (\r\n                <Form>\r\n                  <Box mt={2}>\r\n                    <FormControl fullWidth>\r\n                      <OutlinedInput\r\n                        type=\"number\"\r\n                        variant=\"outlined\"\r\n                        placeholder=\"Enter your OTP\"\r\n                        size=\"small\"\r\n                        name=\"otp\"\r\n                        maxLength=\"4\"\r\n                        value={values.otp}\r\n                        error={Boolean(touched.otp && errors.otp)}\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                      />\r\n                      <FormHelperText error>\r\n                        {touched.otp && errors.otp}\r\n                      </FormHelperText>\r\n                    </FormControl>\r\n                    {errorMessage && (\r\n                      <Box\r\n                        textAlign=\"start\"\r\n                        // textAlign=\"left\"\r\n                        ml={1}\r\n                        mt={1}\r\n                        style={{ color: \"#ba1f11\", fontWeight: 600 }}\r\n                      >\r\n                        {errorMessage}\r\n                      </Box>\r\n                    )}\r\n                  </Box>\r\n                  <Box mt={3}>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      variant=\"contained\"\r\n                      color=\"secondary\"\r\n                      fullWidth\r\n                      size=\"large\"\r\n                      disabled={isloading || isLoading}\r\n                      // onClick={verifyOTP}\r\n                    >\r\n                      Verify OTP {isloading && <ButtonCircularProgress />}\r\n                    </Button>\r\n                  </Box>\r\n                </Form>\r\n              )}\r\n            </Formik>\r\n            {!isloading && (\r\n              <Box align=\"center\" mt={5}>\r\n                <label\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={resendOTP}\r\n                  disabled={isLoading}\r\n                >\r\n                  Resend OTP\r\n                </label>{\" \"}\r\n                &nbsp;\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Page>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import { Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nexport default function Page(props) {\r\n  const { title, children } = props;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      <Container>{children}</Container>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}