{"version":3,"sources":["views/pages/StaticContent/EditContent.js","component/Page.js"],"names":["useStyles","makeStyles","theme","root","padding","formBox","position","background","borderRadius","marginTop","marginBottom","yep","shape","subject","required","min","max","matches","description","AddStatic","classes","history","useHistory","useState","setIsLoading","setBtnText","staticData","setSattaicsData","location","useLocation","editor","useContext","AuthContext","useRef","descritionValue","setdescriptionValue","console","log","isSubmit","setIsSubmit","setIdd","title","formValue","setFormValue","FormHandleSubmit","event","a","preventDefault","length","axios","method","url","ApiConfig","editStatics","data","_id","res","responseCode","toast","success","responseMessage","push","error","message","viewExclusicContentHandler","viewStatic","params","type","search","substring","result","useEffect","id","className","variant","color","maxWidth","onSubmit","container","spacing","direction","item","xs","md","mt","placeholder","size","fullWidth","name","value","Boolean","onChange","e","target","temp","ref","config","readonly","tabIndex","align","onClick","number","document","getElementById","getcube","Page","props","children"],"mappings":"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","file":"static/js/40.4098bf58.chunk.js","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  TextField,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  FormHelperText,\r\n  Paper,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport \"react-phone-input-2/lib/style.css\";\r\nimport Page from \"src/component/Page\";\r\nimport { Form, Formik } from \"formik\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport { toast } from \"react-toastify\";\r\nimport {\r\n  useHistory,\r\n  Link as RouterComponent,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport ButtonCircularProgress from \"src/component/ButtonCircularProgress\";\r\nimport * as yep from \"yup\";\r\nimport ApiConfig from \"src/ApiConfig/ApiConfig\";\r\nimport axios from \"axios\";\r\nimport JoditEditor from \"jodit-react\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"15px\",\r\n  },\r\n  formBox: {\r\n    padding: \"15px\",\r\n    position: \"relative\",\r\n    background: \"#000\",\r\n    borderRadius: \"10px\",\r\n    marginTop: \"30px\",\r\n    marginBottom: \"15px\",\r\n  },\r\n}));\r\n\r\nconst formValidationSchema = yep.object().shape({\r\n  subject: yep\r\n    .string()\r\n    .required(\" Subject is required\")\r\n    .min(2, \"Please enter atleast 2 characters\")\r\n    .max(35, \"You can enter only 35 characters\")\r\n    .matches(\r\n      /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/,\r\n      \"Only alphabets and whitespaces are allowed for this field number are not. \"\r\n    ),\r\n  description: yep\r\n    .string()\r\n    .required(\" Message is required\")\r\n    .min(2, \"Please enter atleast 2 characters\")\r\n    .max(750, \"You can enter only 750 characters\"),\r\n});\r\n\r\nexport default function AddStatic() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [btnText, setBtnText] = useState(\"SUBMIT\");\r\n  const [staticData, setSattaicsData] = useState();\r\n  const location = useLocation();\r\n  const auth = useContext(AuthContext);\r\n  const editor = useRef(null);\r\n  const [descritionValue, setdescriptionValue] = useState(\"\");\r\n  console.log(\"descritionValue\",descritionValue)\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const [Idd, setIdd] = useState();\r\n  // setIsSubmit(true)\r\n\r\n  const [formValue, setFormValue] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n  });\r\n  const _onInputChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    const temp = { ...formValue, [name]: value };\r\n    setFormValue(temp);\r\n  };\r\n\r\n  const FormHandleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setIsSubmit(true);\r\n    setIsLoading(true);\r\n    if (\r\n      formValue.title !== \"\" &&\r\n      descritionValue !== \"\" &&\r\n      formValue.title.length < 40\r\n    ) {\r\n      try {\r\n        const res = await axios({\r\n          method: \"PUT\",\r\n          url: ApiConfig.editStatics,\r\n          data: {\r\n            _id: staticData?._id,\r\n            title: formValue?.title,\r\n            description: descritionValue,\r\n          },\r\n        });\r\n        if (res.data.responseCode === 200) {\r\n          setIsSubmit(false);\r\n          setBtnText(\"SUBMIT\");\r\n          toast.success(res.data.responseMessage);\r\n          history.push(\"/static\");\r\n          setIsLoading(false);\r\n        }\r\n      } catch (error) {\r\n        setIsSubmit(false);\r\n        toast.error(error.message);\r\n        setIsLoading(false);\r\n      }\r\n    }\r\n  };\r\n  const viewExclusicContentHandler = async () => {\r\n    try {\r\n      const res = await axios({\r\n        method: \"GET\",\r\n        url: ApiConfig.viewStatic,\r\n        // headers: {\r\n        //   token: window.localStorage.getItem(\"token\"),\r\n        // },\r\n        params: {\r\n          type: location.search.substring(1, location.search.length),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setSattaicsData(res.data.result);\r\n      }\r\n    } catch (error) {}\r\n  };\r\n  useEffect(() => {\r\n    if (location.search.substring(1, location.search.length)) {\r\n      const id = location.search.substring(1, location.search.length);\r\n      setIdd(id);\r\n    }\r\n    if (location.search.substring(1, location.search.length)) {\r\n      viewExclusicContentHandler();\r\n    }\r\n  }, [location.search]);\r\n  useEffect(() => {\r\n    if (staticData) {\r\n      setFormValue({\r\n        title: staticData.title ? staticData.title : \"\",\r\n        description: staticData.description ? staticData.description : \"\",\r\n      });\r\n      setdescriptionValue(staticData.description ? staticData.description : \"\");\r\n    }\r\n  }, [staticData]);\r\n  const config = {\r\n    readonly: false,\r\n  };\r\n  const getcube=()=>{  \r\n    var number=document.getElementById(\"message\").value; \r\n    setdescriptionValue(number) \r\n    }  \r\n  return (\r\n    <Page title=\"Edit Static Content\">\r\n      <Paper className={classes.root}>\r\n        <Box>\r\n          <Typography variant=\"h3\" color=\"primary.main\">\r\n            Edit Static Content\r\n          </Typography>\r\n        </Box>\r\n        <Container maxWidth=\"md\">\r\n          <Box className={classes.formBox}>\r\n            {/* <Form onSubmit={FormHandleSubmit}> */}\r\n            <form onSubmit={(event) => FormHandleSubmit(event)}>\r\n              <Grid container spacing={2} direction={\"column\"}>\r\n                <Grid item xs={12} md={12}>\r\n                  <label>Title</label>\r\n                 <Box mt={1}>\r\n                 <TextField\r\n                    placeholder=\"Enter Subject\"\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"title\"\r\n                    value={formValue.title}\r\n                    error={Boolean(\r\n                      (isSubmit && formValue.title === \"\") ||\r\n                        (formValue.title !== \"\" && formValue.title.length > 40)\r\n                    )}\r\n                    // onBlur={handleBlur}\r\n                    onChange={_onInputChange}\r\n                  />\r\n                  {(isSubmit && formValue.title === \"\" && (\r\n                    <FormHelperText error>Title is required</FormHelperText>\r\n                  )) ||\r\n                    (formValue.title !== \"\" && formValue.title.length > 40 && (\r\n                      <FormHelperText error>\r\n                        Title should be less than 40 characters.\r\n                      </FormHelperText>\r\n                    ))}\r\n                  </Box>\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                  <label>Description</label>\r\n                <Box mt={1}>\r\n                <JoditEditor\r\n                  id=\"message\"\r\n                    ref={editor}\r\n                    // value={descritionValue}\r\n                    value={descritionValue}\r\n                    // value={formData.description}\r\n                    config={config}\r\n                    // disabled={loader}\r\n                    name=\"descritionValue\"\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    tabIndex={1}\r\n                    // onBlur={(e) => setdescriptionValue(e)} // preferred to use only this option to update the content for performance reasons\r\n                    // onChange={(newContent) => setdescriptionValue(newContent)}\r\n                  />\r\n                  {/* <TextField\r\n                    placeholder=\"Enter your message\"\r\n                    type=\"text\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    multiline\r\n                    fullWidth\r\n                    maxRows={4}\r\n                    Scroll=\"auto\"\r\n                    name=\"description\"\r\n                    value={formValue.description}\r\n                    //   error={Boolean(touched.description && errors.description)}\r\n                    // onBlur={handleBlur}\r\n                    onChange={_onInputChange}\r\n                  /> */}\r\n                  {isSubmit && descritionValue === \"\" && (\r\n                    <FormHelperText error>\r\n                      Description is required\r\n                    </FormHelperText>\r\n                  )}\r\n                </Box>\r\n                </Grid>\r\n                <Grid item xs={12} align=\"center\">\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    size=\"large\"\r\n                    value=\"submit\"\r\n                    // disabled={isLoading}\r\n                    onClick={()=>getcube()}\r\n\r\n                  >\r\n                    Submit\r\n                    {/* {btnText} {isLoading && <ButtonCircularProgress />} */}\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n\r\n            {/* </Form> */}\r\n          </Box>\r\n        </Container>\r\n      </Paper>\r\n    </Page>\r\n  );\r\n}\r\n","import { Container } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\nexport default function Page(props) {\r\n  const { title, children } = props;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      <Container>{children}</Container>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}