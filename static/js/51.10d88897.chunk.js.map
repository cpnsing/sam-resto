{"version":3,"sources":["views/pages/Notification/NotificationList.js","views/pages/Notification/Subscriber.js","views/pages/Notification/Index.js"],"names":["useStyles","makeStyles","root","display","flexDirection","box","justifyContent","main","backgroundColor","borderRadius","padding","dot","width","height","mainContent","borderBottom","btnSection","alignItems","btn","marginLeft","deskiText","fontSize","dialogProfileImage","minWidth","overflow","objectFit","fontWeight","color","NotificationList","classes","history","useHistory","auth","useContext","AuthContext","useState","isSubmit","setIsSubmit","React","isHidePost","setIsHidePost","open3","setOpen3","open4","setOpen4","collectionDataLoader","setCollectionDataLoader","collectionDetails","setCollectionDetails","promotionPostDetails","setPromotionpostDetails","isVideo","mediaUrl","includes","isVideo1","useEffect","Axios","get","Apiconfigs","readNotification","headers","token","localStorage","getItem","deleteNotification","a","method","url","deleteAllNotification","window","res","data","responseCode","setNotificationList","toast","success","responseMessage","colletionDetails","viewCollection","result","myPostPromotionView","params","_id","Box","className","DataLoading","pb","Typography","variant","notificationList","length","Button","style","cursor","onClick","Grid","container","direction","spacing","NoDataFound","map","i","item","xs","key","likeBy","src","profilePic","commentBy","ml","notificationType","push","pathname","search","postId","handleOpen","collectionId","auctionId","handleOpenPromotionPost","promotionId","description","marginBottom","moment","createdAt","local","fromNow","Dialog","fullWidth","maxWidth","open","onClose","aria-labelledby","DialogContent","controls","type","image","alt","mt","align","userId","text","userName","name","amount","Number","toFixed","duration","title","mb","textAlign","size","dateTime","wordBreak","details","aria-describedby","DialogContentText","id","DialogActions","autoFocus","theme","paddingBottom","Users","margin","marginRight","position","top","right","maxHeight","Subscriber","dataList","setDataList","isLoading","setIsLoading","setFollowerListCount","listPublicExclusiveHandler","axios","listFollowerUser","followers","slice","count","Paper","elevation","Link","component","RouterComponent","to","props","Index","lg","sm","md"],"mappings":"oWAyBMA,G,QAAYC,YAAW,CAC3BC,KAAM,CACJ,0BAA2B,CACzBC,QAAS,OACTC,cAAe,WAGnBC,IAAK,CACHF,QAAS,OACTG,eAAgB,iBAElBC,KAAM,CACJC,gBAAiB,QACjBC,aAAc,OACdC,QAAS,QAEXC,IAAK,CACHC,MAAO,MACPC,OAAQ,MACRJ,aAAc,MACdD,gBAAiB,WAEnBM,YAAa,CACXX,QAAS,OAETY,aAAc,wBAEhBC,WAAY,CACVb,QAAS,OACTG,eAAgB,MAChBW,WAAY,UAEdC,IAAK,CACHf,QAAS,OACTG,eAAgB,WAChB,0BAA2B,CACzBH,QAAS,OACTgB,WAAY,OACZb,eAAgB,eAGpBc,UAAW,CACT,OAAQ,CACNC,SAAU,SAGdC,mBAAoB,CAClBnB,QAAS,OACTc,WAAY,SACZ,eAAgB,CACdM,SAAU,OACVX,MAAO,OACPC,OAAQ,OACRW,SAAU,SACVf,aAAc,MACdN,QAAQ,OACRK,gBAAiB,UACjB,QAAS,CACPI,MAAO,OACPC,OAAQ,OACRY,UAAW,UAGf,cAAe,CACbN,WAAY,MACZ,OAAQ,CACNE,SAAU,OACVK,WAAY,MACZC,MAAO,aAmfAC,MA7ef,WAA6B,IAAD,kCACpBC,EAAU7B,IACV8B,EAAUC,cACVC,EAAOC,qBAAWC,KACxB,EAAgCC,oBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCC,IAAMH,UAAS,GAAnD,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAA0BF,IAAMH,UAAS,GAAzC,mBAAOM,EAAP,KAAcC,EAAd,KACA,GAA0BJ,IAAMH,UAAS,GAAzC,qBAAOQ,GAAP,MAAcC,GAAd,MACA,GAAwDN,IAAMH,UAAS,GAAvE,qBAAOU,GAAP,MAA6BC,GAA7B,MACA,GAAkDX,qBAAlD,qBAAOY,GAAP,MAA0BC,GAA1B,MACA,GAAwDb,qBAAxD,qBAAOc,GAAP,MAA6BC,GAA7B,MACMC,GAAO,OAAGJ,SAAH,IAAGA,IAAH,UAAGA,GAAmBK,gBAAtB,aAAG,EAA6BC,SAAS,QAChDC,GAAQ,OAAGL,SAAH,IAAGA,IAAH,UAAGA,GAAsBG,gBAAzB,aAAG,EAAgCC,SAAS,QAE1DE,qBAAU,WACRC,IAAMC,IAAIC,IAAWC,iBAAkB,CACrCC,QAAS,CACPC,MAAOC,aAAaC,QAAQ,cAG/B,IAEH,IAAMC,GAAkB,uCAAG,4BAAAC,EAAA,6DACzB5B,GAAY,GADa,kBAGLmB,IAAM,CACtBU,OAAQ,SACRC,IAAKT,IAAWU,sBAChBR,QAAS,CACPC,MAAOQ,OAAOP,aAAaC,QAAQ,YAPhB,OAUO,OAPxBO,EAHiB,QAUfC,KAAKC,eACXnC,GAAY,GACZG,GAAc,GACdR,EAAKyC,oBAAoB,IAGzBC,IAAMC,QAAQL,EAAIC,KAAKK,kBAhBF,gDAmBvBpC,GAAc,GACdH,GAAY,GApBW,yDAAH,qDAmClBwC,GAAgB,uCAAG,WAAON,GAAP,eAAAN,EAAA,6DACvBnB,IAAwB,GADD,kBAGHU,IAAM,CACtBU,OAAQ,MACRC,IAAKT,IAAWoB,eAAiBP,EACjCX,QAAS,CACPC,MAAOQ,OAAOP,aAAaC,QAAQ,YAPlB,OAaS,OAVxBO,EAHe,QAabC,KAAKC,cACXxB,GAAqBsB,EAAIC,KAAKQ,QAGhCjC,IAAwB,GAjBH,gDAmBrBA,IAAwB,GAnBH,yDAAH,sDAsBhBkC,GAAmB,uCAAG,WAAOT,GAAP,eAAAN,EAAA,6DAC1BnB,IAAwB,GADE,kBAGNU,IAAM,CACtBU,OAAQ,MACRC,IAAKT,IAAWsB,oBAChBpB,QAAS,CACPC,MAAOQ,OAAOP,aAAaC,QAAQ,UAErCkB,OAAQ,CACNC,IAAKX,KAVe,OAaM,OAVxBD,EAHkB,QAahBC,KAAKC,cACXtB,GAAwBoB,EAAIC,KAAKQ,QAGnCjC,IAAwB,GAjBA,gDAmBxBA,IAAwB,GAnBA,yDAAH,sDAuBzB,OACE,oCACE,kBAACqC,EAAA,EAAD,CAAKC,UAAWvD,EAAQtB,MACrB6B,EACC,kBAACiD,EAAA,EAAD,MAEA,oCACE,kBAACF,EAAA,EAAD,CAAKC,UAAWvD,EAAQxB,IAAKiF,GAAI,GAC/B,kBAACC,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBACK,OAAJxD,QAAI,IAAJA,GAAA,UAAAA,EAAMyD,wBAAN,eAAwBC,QAAS,GAChC,kBAACC,EAAA,EAAD,CACEH,QAAQ,YACR7D,MAAM,YACNiE,MAAO,CAAEC,OAAQ,WACjBC,QAAS,kBAAMtD,GAAc,KAJ/B,wBAaJ,kBAACuD,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAW,SAAUC,QAAS,GACT,IAA9B,OAAJlE,QAAI,IAAJA,GAAA,UAAAA,EAAMyD,wBAAN,eAAwBC,SAAe,kBAACS,EAAA,EAAD,MAD1C,OAEGnE,QAFH,IAEGA,GAFH,UAEGA,EAAMyD,wBAFT,aAEG,EAAwBW,KAAI,SAAC7B,EAAM8B,GAAO,IAAD,QACxC,OACE,kBAACN,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,IAAKH,GAEpB,kBAAClB,EAAA,EAAD,CAAKC,UAAWvD,EAAQf,aACtB,kBAACqE,EAAA,EAAD,CAAKC,UAAWvD,EAAQP,oBACtB,kBAAC6D,EAAA,EAAD,CAAKC,UAAU,cACR,OAAJb,QAAI,IAAJA,OAAA,EAAAA,EAAMkC,QACL,yBACEb,MAAO,CAAEhF,MAAO,QAChB8F,KACM,OAAJnC,QAAI,IAAJA,GAAA,UAAAA,EAAMkC,cAAN,eAAcE,YAAd,OACIpC,QADJ,IACIA,GADJ,UACIA,EAAMkC,cADV,aACI,EAAcE,WACd,oBAIR,yBACEf,MAAO,CAAEhF,MAAO,QAChB8F,KACM,OAAJnC,QAAI,IAAJA,GAAA,UAAAA,EAAMqC,iBAAN,eAAiBD,YAAjB,OACIpC,QADJ,IACIA,GADJ,UACIA,EAAMqC,iBADV,aACI,EAAiBD,WACjB,sBAMd,kBAACxB,EAAA,EAAD,CAAK0B,GAAI,GACP,kBAACtB,EAAA,EAAD,CACEK,MAAO,CACLC,OAAQ,UACRlE,MAAO,UACPD,WAAY,MACZL,SAAU,QAEZyE,QAAS,WAIJ,IAAD,EAHF,GAC6B,kBAAvB,OAAJvB,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,mBACqB,eAAvB,OAAJvC,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,kBAENhF,EAAQiF,KAAK,CACXC,SAAU,WACVC,OAAM,UAAE1C,EAAK2C,cAAP,aAAE,EAAahC,WAElB,GACsB,qBAAvB,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,kBACN,CAAC,IAAD,GAhIX,SAACvC,GAClB7B,GAAS,GAETmC,GAAiBN,GA8HW4C,CAAU,OAAC5C,QAAD,IAACA,GAAD,UAACA,EAAM6C,oBAAP,aAAC,EAAoBlC,UAC1B,GACsB,oBAAvB,OAAJX,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,mBACqB,qBAAvB,OAAJvC,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,kBAENhF,EAAQiF,KAAK,CACXC,SAAU,iBAEP,GACsB,kBAAvB,OAAJzC,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,kBAENhF,EAAQiF,KAAK,CACXC,SAAU,iBACVC,OAAQ1C,EAAK8C,iBAEV,GAEH,4BADE,OAAJ9C,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,mBAEqB,yBAAvB,OAAJvC,QAAI,IAAJA,OAAA,EAAAA,EAAMuC,kBACN,CAAC,IAAD,GA9IE,SAACvC,GAC/B3B,IAAS,GAEToC,GAAoBT,GA4IQ+C,CAAuB,OAAC/C,QAAD,IAACA,GAAD,UAACA,EAAMgD,mBAAP,aAAC,EAAmBrC,UACtC,UAAIX,QAAJ,IAAIA,OAAJ,EAAIA,EAAMqC,UAAW,CAAC,IAAD,EAC1B9E,EAAQiF,KAAK,CACXC,SAAU,kBACVC,OAAM,UAAE1C,EAAKqC,iBAAP,aAAE,EAAgB1B,UAErB,CAAC,IAAD,EACLpD,EAAQiF,KAAK,CACXC,SAAU,kBACVC,OAAM,UAAE1C,EAAKkC,cAAP,aAAE,EAAavB,SAhD7B,OAmEGX,QAnEH,IAmEGA,OAnEH,EAmEGA,EAAMiD,aAET,kBAACjC,EAAA,EAAD,CAAYK,MAAO,CAAE6B,aAAc,SAChCC,IAAOnD,EAAKoD,WAAWC,QAAQC,mBAWnDpF,GACC,kBAACqF,EAAA,EAAD,CACEC,UAAU,KACVC,SAAS,KACTC,KAAMxF,EACNyF,QAAS,kBAAMxF,GAAS,IACxByF,kBAAgB,0BAEftF,GACC,kBAACwC,EAAA,EAAD,MAEA,kBAAC+C,EAAA,EAAD,KACE,kBAACjD,EAAA,EAAD,CAAKC,UAAU,iBACZjC,GACC,6BACE,2BAAOvC,MAAM,OAAOyH,UAAQ,GAC1B,4BACE3B,IAAG,OAAE3D,SAAF,IAAEA,QAAF,EAAEA,GAAmBK,SACxBkF,KAAK,gBAKX,yBAAK5B,IAAG,OAAE3D,SAAF,IAAEA,QAAF,EAAEA,GAAmBwF,MAAOC,IAAI,MAI5C,kBAACrD,EAAA,EAAD,CAAKsD,GAAI,GACP,kBAAC1C,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAGjF,WAAW,UACrC,kBAAC8E,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAGmC,MAAM,QACtB,kBAACvD,EAAA,EAAD,CAAKC,UAAWvD,EAAQP,oBACtB,kBAAC6D,EAAA,EAAD,CAAKC,UAAU,aACb,yBACEsB,KACmB,OAAjB3D,SAAiB,IAAjBA,IAAA,UAAAA,GAAmB4F,cAAnB,eAA2BhC,YAA3B,OACI5D,SADJ,IACIA,IADJ,UACIA,GAAmB4F,cADvB,aACI,EAA2BhC,WAC3B,mBAEN6B,IAAI,4BAGR,kBAACrD,EAAA,EAAD,CAAKC,UAAU,YACb,kBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWvD,EAAQ+G,OACxB,OAAjB7F,SAAiB,IAAjBA,IAAA,UAAAA,GAAmB4F,cAAnB,eAA2BE,UAA3B,OACG9F,SADH,IACGA,IADH,UACGA,GAAmB4F,cADtB,aACG,EAA2BE,SAD9B,OAEG9F,SAFH,IAEGA,IAFH,UAEGA,GAAmB4F,cAFtB,aAEG,EAA2BG,SAKvC,kBAAC/C,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAGmC,MAAM,SACtB,kBAACnD,EAAA,EAAD,CAAYC,QAAQ,SAApB,yBAEE,0BACEI,MAAO,CACLvE,SAAU,OACVM,MAAO,UACPD,WAAY,SAGI,OAAjBqB,SAAiB,IAAjBA,QAAA,EAAAA,GAAmBgG,QAAS,EAA5B,OACGhG,SADH,IACGA,QADH,EACGA,GAAmBgG,OADtB,UAEGC,OAAM,OAACjG,SAAD,IAACA,QAAD,EAACA,GAAmBgG,eAF7B,aAEG,EAAmCE,QAAQ,GATjD,OAWG,YAKT,kBAAC9D,EAAA,EAAD,CAAKsD,GAAI,EAAGrD,UAAWvD,EAAQT,WAC7B,kBAAC2E,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,GACvB,kBAACH,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAImC,MAAM,QACvB,kBAACnD,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACY,IACV,qCAAOzC,SAAP,IAAOA,QAAP,EAAOA,GAAmBmG,SAA1B,eAIJ,kBAACnD,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,IACb,kBAAChB,EAAA,EAAD,CAAYC,QAAQ,MAApB,aAEF,kBAACO,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,IACb,kBAAChB,EAAA,EAAD,CAAYC,QAAQ,MAApB,OACGzC,SADH,IACGA,QADH,EACGA,GAAmBoG,UAM5B,kBAAChE,EAAA,EAAD,CAAKsD,GAAI,EAAGW,GAAI,EAAGC,UAAU,UAC3B,kBAAC1D,EAAA,EAAD,CACEH,QAAQ,YACR7D,MAAM,UACN2H,KAAK,QACLxD,QAAS,WACPpD,GAAS,KALb,cAiBXC,IACC,kBAACmF,EAAA,EAAD,CACEC,UAAU,KACVC,SAAS,KACTC,KAAMtF,GACNuF,QAAS,kBAAMtF,IAAS,IACxBuF,kBAAgB,0BAEftF,GACC,kBAACwC,EAAA,EAAD,MAEA,kBAAC+C,EAAA,EAAD,KACE,kBAACjD,EAAA,EAAD,CAAKC,UAAU,iBACZ9B,GACC,6BACE,2BAAO1C,MAAM,OAAOyH,UAAQ,GAC1B,4BACE3B,IAAG,OAAEzD,SAAF,IAAEA,QAAF,EAAEA,GAAsBG,SAC3BkF,KAAK,gBAKX,yBAAK5B,IAAG,OAAEzD,SAAF,IAAEA,QAAF,EAAEA,GAAsBG,SAAUoF,IAAI,MAIlD,kBAACrD,EAAA,EAAD,CAAKsD,GAAI,GACP,kBAAC1C,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAGjF,WAAW,UACrC,kBAAC8E,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAGmC,MAAM,QACtB,kBAACvD,EAAA,EAAD,CAAKC,UAAWvD,EAAQP,oBACtB,kBAAC6D,EAAA,EAAD,CAAKC,UAAU,aACb,yBACEsB,KACsB,OAApBzD,SAAoB,IAApBA,IAAA,UAAAA,GAAsB0F,cAAtB,eAA8BhC,YAA9B,OACI1D,SADJ,IACIA,IADJ,UACIA,GAAsB0F,cAD1B,aACI,EAA8BhC,WAC9B,mBAEN6B,IAAI,+BAGR,kBAACrD,EAAA,EAAD,CAAKC,UAAU,YACb,kBAACG,EAAA,EAAD,CAAYC,QAAQ,KAAKJ,UAAWvD,EAAQ+G,OACrB,OAApB3F,SAAoB,IAApBA,IAAA,UAAAA,GAAsB0F,cAAtB,eAA8BE,UAA9B,OACG5F,SADH,IACGA,IADH,UACGA,GAAsB0F,cADzB,aACG,EAA8BE,SADjC,OAEG5F,SAFH,IAEGA,IAFH,UAEGA,GAAsB0F,cAFzB,aAEG,EAA8BG,SAK1C,kBAAC/C,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,EAAGmC,MAAM,SACtB,kBAACnD,EAAA,EAAD,CAAYC,QAAQ,SAApB,yBAEE,0BACEI,MAAO,CACLvE,SAAU,OACVM,MAAO,UACPD,WAAY,SAGO,OAApBuB,SAAoB,IAApBA,QAAA,EAAAA,GAAsB8F,QAAS,EAA/B,OACG9F,SADH,IACGA,QADH,EACGA,GAAsB8F,OADzB,UAEGC,OAAM,OAAC/F,SAAD,IAACA,QAAD,EAACA,GAAsB8F,eAFhC,aAEG,EAAsCE,QAAQ,GATpD,OAWG,YAKT,kBAAC9D,EAAA,EAAD,CAAKsD,GAAI,EAAGrD,UAAWvD,EAAQT,WAC7B,kBAAC2E,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,GACvB,kBAACH,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAImC,MAAM,QACvB,kBAACnD,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACY,IACV,qCACGvC,SADH,IACGA,QADH,EACGA,GAAsBsG,SADzB,eAMJ,kBAACxD,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,IACb,kBAAChB,EAAA,EAAD,CAAYC,QAAQ,MAApB,aAEF,kBAACO,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,IACb,kBAAChB,EAAA,EAAD,CACEC,QAAQ,KACRI,MAAO,CAAE4D,UAAW,cAFtB,OAIGvG,SAJH,IAIGA,QAJH,EAIGA,GAAsBwG,YAM/B,kBAACtE,EAAA,EAAD,CAAKsD,GAAI,EAAGW,GAAI,EAAGC,UAAU,UAC3B,kBAAC1D,EAAA,EAAD,CACEH,QAAQ,YACR7D,MAAM,UACN2H,KAAK,QACLxD,QAAS,WACPlD,IAAS,KALb,cAiBZ,kBAACkF,EAAA,EAAD,CACEG,KAAM1F,EACN2F,QAAS,kBAAM1F,GAAc,IAC7B2F,kBAAgB,qBAChBuB,mBAAiB,4BAEjB,kBAACtB,EAAA,EAAD,KACE,kBAACuB,EAAA,EAAD,CAAmBC,GAAG,4BAAtB,qDAKF,kBAACC,EAAA,EAAD,KACE,kBAAClE,EAAA,EAAD,CACEhE,MAAM,YACN6D,QAAQ,YAERM,QAAS9B,IAJX,OASA,kBAAC2B,EAAA,EAAD,CACEG,QAAS,kBAAMtD,GAAc,IAC7BgD,QAAQ,YACR7D,MAAM,UACNmI,WAAS,GAJX,W,kBC/iBN9J,EAAYC,aAAW,SAAC8J,GAAD,MAAY,CACvC7J,KAAM,CACJQ,QAAS,OACTF,gBAAiB,UACjB,aAAc,CACZL,QAAS,OACTc,WAAY,SACZX,eAAgB,gBAChB0J,cAAe,OACfjJ,aAAc,wBAGlBkJ,MAAO,CACLrJ,MAAO,kBACPT,QAAS,OACTc,WAAY,SACZX,eAAgB,gBAChB,aAAc,CACZH,QAAS,OACTc,WAAY,SACZP,QAAS,WACT,OAAQ,CACNgB,WAAY,OAEd,UAAW,CACTC,MAAO,WAET,YAAa,CACXuI,OAAQ,IACRC,YAAa,OACbC,SAAU,WACV,kBAAmB,CACjBvJ,OAAQ,OACRD,MAAO,OACPH,aAAc,MACde,SAAU,SACVhB,gBAAiB,UACjB,QAAS,CAEPwH,SAAU,SAId,YAAa,CACXoC,SAAU,WACVC,IAAK,OACLC,MAAO,OACP,QAAS,CACP1J,MAAO,OACPoH,SAAU,OACVuC,UAAW,WAKnB,cAAe,CACbpK,QAAS,OACTG,eAAgB,gBAChBW,WAAY,eA6EHuJ,MAvEf,WACE,IAAM3I,EAAU7B,IAChB,EAAgCmC,mBAAS,IAAzC,mBAAOsI,EAAP,KAAiBC,EAAjB,KACA,EAAkCvI,oBAAS,GAA3C,mBAAOwI,EAAP,KAAkBC,EAAlB,KACA,EAAkDzI,qBAAlD,mBAA0B0I,GAA1B,WAEMC,EAA0B,uCAAG,4BAAA7G,EAAA,+EAGb8G,IAAM,CACtB7G,OAAQ,MACRC,IAAKT,IAAWsH,iBAChBpH,QAAS,CACPC,MAAOQ,OAAOP,aAAaC,QAAQ,YAPR,OAUD,OAPxBO,EAHyB,QAUvBC,KAAKC,eACXkG,EAAYpG,EAAIC,KAAKQ,OAAOkG,UAAUC,MAAM,EAAG,IAC/CL,EAAqBvG,EAAIC,KAAKQ,OAAOoG,OACrCP,GAAa,IAbgB,gDAgB/BA,GAAa,GAhBkB,yDAAH,qDAsBhC,OAHArH,qBAAU,WACRuH,MACC,IAED,oCACE,kBAACM,EAAA,EAAD,CAAOhG,UAAWvD,EAAQ3B,KAAMmL,UAAW,GACzC,kBAAClG,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACG,EAAA,EAAD,CAAYC,QAAQ,MAApB,cAGCiF,EAAS/E,OAAS,GACjB,kBAAC4F,EAAA,EAAD,CAAMC,UAAWC,IAAiBC,GAAG,mBAAoB7F,MAAO,CAAEjE,MAAO,YAAzE,YAKHgJ,EACC,kBAACtF,EAAA,EAAD,MAEA,kBAACU,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAW,SAAUC,QAAS,GAC3CuE,GAAYA,EAAS/E,OAAS,EAC7B,oCACG+E,IAAQ,OACPA,QADO,IACPA,OADO,EACPA,EAAUrE,KAAI,SAAC7B,EAAM8B,GACnB,OACE,kBAACN,EAAA,EAAD,CAAMO,MAAI,EAACC,GAAI,GAAIC,IAAKH,GACtB,kBAAC,EAAD,CACEsE,UAAWA,EACXpG,KAAMA,EACN+D,KAAK,OACL9B,IAAKH,UAOjB,kBAACF,EAAA,EAAD,UAWR8D,EAAQ,SAACyB,GACb,IAAQnH,EAASmH,EAATnH,KACFzC,EAAUC,cACVF,EAAU7B,IAChB,OACE,oCACE,kBAACmF,EAAA,EAAD,CAAKC,UAAWvD,EAAQoI,OACtB,kBAAC9E,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAD,CAAKC,UAAU,UACb,kBAACD,EAAA,EAAD,CAAKC,UAAU,gBACb,yBACEsB,IAAKnC,EAAKoC,WAAapC,EAAKoC,WAAa,kBACzC6B,IAAI,gBAOV,kBAACrD,EAAA,EAAD,CAAKC,UAAU,YACb,kBAACG,EAAA,EAAD,CACEC,QAAQ,KACRI,MAAO,CAAEC,OAAQ,WACjBC,QAAS,WACPhE,EAAQiF,KAAK,CACXC,SAAU,kBACVC,OAAM,OAAE1C,QAAF,IAAEA,OAAF,EAAEA,EAAMW,QAIjBX,EAAKsE,SAAWtE,EAAKsE,SAAWtE,EAAKuE,WCpL9C9I,EAAYC,aAAW,SAAC8J,GAAD,MAAY,CACvC7J,KAAM,CACJQ,QAAS,OACT,0BAA2B,CACzBA,QAAS,YAsBAiL,UAlBf,WACE,IAAM9J,EAAU7B,IAChB,OACE,oCACE,kBAACoL,EAAA,EAAD,CAAOhG,UAAWvD,EAAQ3B,KAAMmL,UAAW,GACzC,kBAACtF,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,GACvB,kBAACH,EAAA,EAAD,CAAMO,MAAI,EAACsF,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGvF,GAAI,IACnC,kBAAC,EAAD,OAEF,kBAACR,EAAA,EAAD,CAAMO,MAAI,EAACsF,GAAI,EAAGC,GAAI,GAAIC,GAAI,EAAGvF,GAAI,IACnC,kBAAC,EAAD","file":"static/js/51.10d88897.chunk.js","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport Axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FiSettings } from \"react-icons/fi\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport { defaultClassNames } from \"react-dropzone-uploader\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    \"@media(max-width:767px)\": {\r\n      display: \"flex\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  box: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  main: {\r\n    backgroundColor: \"black\",\r\n    borderRadius: \"15px\",\r\n    padding: \"20px\",\r\n  },\r\n  dot: {\r\n    width: \"5px\",\r\n    height: \"5px\",\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"#B55A06\",\r\n  },\r\n  mainContent: {\r\n    display: \"flex\",\r\n    // alignItems: \"center\",\r\n    borderBottom: \"0.25px solid #737373\",\r\n  },\r\n  btnSection: {\r\n    display: \"flex\",\r\n    justifyContent: \"end\",\r\n    alignItems: \"center\",\r\n  },\r\n  btn: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    \"@media(max-width:767px)\": {\r\n      display: \"flex\",\r\n      marginLeft: \"57px\",\r\n      justifyContent: \"flex-start\",\r\n    },\r\n  },\r\n  deskiText: {\r\n    \"& h4\": {\r\n      fontSize: \"14px\",\r\n    },\r\n  },\r\n  dialogProfileImage: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    \"& .userImage\": {\r\n      minWidth: \"40px\",\r\n      width: \"40px\",\r\n      height: \"40px\",\r\n      overflow: \"hidden\",\r\n      borderRadius: \"50%\",\r\n      display:\"flex\",\r\n      backgroundColor: \"#101010\",\r\n      \"& img\": {\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        objectFit: \"cover\",\r\n      },\r\n    },\r\n    \"& .username\": {\r\n      marginLeft: \"8px\",\r\n      \"& h6\": {\r\n        fontSize: \"18px\",\r\n        fontWeight: \"500\",\r\n        color: \"#FFF\",\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nfunction NotificationList() {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const [isHidePost, setIsHidePost] = React.useState(false);\r\n  const [open3, setOpen3] = React.useState(false);\r\n  const [open4, setOpen4] = React.useState(false);\r\n  const [collectionDataLoader, setCollectionDataLoader] = React.useState(false);\r\n  const [collectionDetails, setCollectionDetails] = useState();\r\n  const [promotionPostDetails, setPromotionpostDetails] = useState();\r\n  const isVideo = collectionDetails?.mediaUrl?.includes(\".mp4\");\r\n  const isVideo1 = promotionPostDetails?.mediaUrl?.includes(\".mp4\");\r\n\r\n  useEffect(() => {\r\n    Axios.get(Apiconfigs.readNotification, {\r\n      headers: {\r\n        token: localStorage.getItem(\"token\"),\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  const deleteNotification = async () => {\r\n    setIsSubmit(true);\r\n    try {\r\n      const res = await Axios({\r\n        method: \"DELETE\",\r\n        url: Apiconfigs.deleteAllNotification,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setIsSubmit(false);\r\n        setIsHidePost(false);\r\n        auth.setNotificationList([]);\r\n        // MyPostPromotionList();\r\n        // setOpenReport(false);\r\n        toast.success(res.data.responseMessage);\r\n      }\r\n    } catch (error) {\r\n      setIsHidePost(false);\r\n      setIsSubmit(false);\r\n    }\r\n  };\r\n\r\n  const handleOpen = (data) => {\r\n    setOpen3(true);\r\n    // setCollectionData(data)\r\n    colletionDetails(data);\r\n  };\r\n\r\n  const handleOpenPromotionPost = (data) => {\r\n    setOpen4(true);\r\n    // setCollectionData(data)\r\n    myPostPromotionView(data);\r\n  };\r\n  const colletionDetails = async (data) => {\r\n    setCollectionDataLoader(true);\r\n    try {\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.viewCollection + data,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n        // params:{\r\n        //   subscriptionId:data\r\n        // }\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setCollectionDetails(res.data.result);\r\n      } else {\r\n      }\r\n      setCollectionDataLoader(false);\r\n    } catch (error) {\r\n      setCollectionDataLoader(false);\r\n    }\r\n  };\r\n  const myPostPromotionView = async (data) => {\r\n    setCollectionDataLoader(true);\r\n    try {\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.myPostPromotionView,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n        params: {\r\n          _id: data,\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setPromotionpostDetails(res.data.result);\r\n      } else {\r\n      }\r\n      setCollectionDataLoader(false);\r\n    } catch (error) {\r\n      setCollectionDataLoader(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.main}>\r\n        {isSubmit ? (\r\n          <DataLoading />\r\n        ) : (\r\n          <>\r\n            <Box className={classes.box} pb={2}>\r\n              <Typography variant=\"h5\">Notifications</Typography>\r\n              {auth?.notificationList?.length > 0 && (\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => setIsHidePost(true)}\r\n                  // onClick={deleteNotification}\r\n                >\r\n                  Delete notification\r\n                </Button>\r\n              )}\r\n\r\n              {/* <FiSettings style={{ fontSize: \"20px\" }} /> */}\r\n            </Box>\r\n            <Grid container direction={\"cloumn\"} spacing={1}>\r\n              {auth?.notificationList?.length == 0 && <NoDataFound />}\r\n              {auth?.notificationList?.map((data, i) => {\r\n                return (\r\n                  <Grid item xs={12} key={i}>\r\n                    {/* <Box className={classes.root}> */}\r\n                      <Box className={classes.mainContent}>\r\n                        <Box className={classes.dialogProfileImage}>\r\n                          <Box className=\"userImage\">\r\n                            {data?.likeBy ? (\r\n                              <img\r\n                                style={{ width: \"50px\" }}\r\n                                src={\r\n                                  data?.likeBy?.profilePic\r\n                                    ? data?.likeBy?.profilePic\r\n                                    : \"images/user.png\"\r\n                                }\r\n                              />\r\n                            ) : (\r\n                              <img\r\n                                style={{ width: \"50px\" }}\r\n                                src={\r\n                                  data?.commentBy?.profilePic\r\n                                    ? data?.commentBy?.profilePic\r\n                                    : \"images/user.png\"\r\n                                }\r\n                              />\r\n                            )}\r\n                          </Box>\r\n                        </Box>\r\n                        <Box ml={2}>\r\n                          <Typography\r\n                            style={{\r\n                              cursor: \"pointer\",\r\n                              color: \"#ffffff\",\r\n                              fontWeight: \"500\",\r\n                              fontSize: \"14px\",\r\n                            }}\r\n                            onClick={() => {\r\n                              if (\r\n                                data?.notificationType === \"POST_COMMENT\" ||\r\n                                data?.notificationType === \"POST_LIKE\"\r\n                              ) {\r\n                                history.push({\r\n                                  pathname: \"/comment\",\r\n                                  search: data.postId?._id,\r\n                                });\r\n                              } else if (\r\n                                data?.notificationType === \"COLLECTION_LIKE\"\r\n                              ) {\r\n                                handleOpen(data?.collectionId?._id);\r\n                              } else if (\r\n                                data?.notificationType === \"AMOUNT_DEPOSIT\" ||\r\n                                data?.notificationType === \"AMOUNT_WITHDRAW\"\r\n                              ) {\r\n                                history.push({\r\n                                  pathname: \"/wallet\",\r\n                                });\r\n                              } else if (\r\n                                data?.notificationType === \"LIKE_AUCTION\"\r\n                              ) {\r\n                                history.push({\r\n                                  pathname: \"/about-auction\",\r\n                                  search: data.auctionId,\r\n                                });\r\n                              } else if (\r\n                                data?.notificationType ===\r\n                                  \"POST_PROMOTION_COMMENT\" ||\r\n                                data?.notificationType === \"POST_PROMOTION_LIKE\"\r\n                              ) {\r\n                                handleOpenPromotionPost(data?.promotionId?._id);\r\n                              } else if (data?.commentBy) {\r\n                                history.push({\r\n                                  pathname: \"/about-creators\",\r\n                                  search: data.commentBy?._id,\r\n                                });\r\n                              } else {\r\n                                history.push({\r\n                                  pathname: \"/about-creators\",\r\n                                  search: data.likeBy?._id,\r\n                                });\r\n                              }\r\n                            }}\r\n                            // onClick={()=>{\r\n                            //   if (data?.notificationType === \"POST_COMMENT\" || data?.notificationType=== \"POST_LIKE\") {\r\n                            //     history.push({\r\n                            //         pathname:\"/comment\",\r\n                            //         search: data?.postId,\r\n                            //     })\r\n                            //   } else {\r\n                            //     history.push({\r\n                            //         pathname:\"/about-creators\",\r\n                            //         search: data?.userId,\r\n                            //     })\r\n\r\n                            //   }\r\n                            // }}\r\n                          >\r\n                            {data?.description}\r\n                          </Typography>\r\n                          <Typography style={{ marginBottom: \"10px\" }}>\r\n                            {moment(data.createdAt).local().fromNow()}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    {/* </Box> */}\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </>\r\n        )}\r\n        {open3 && (\r\n          <Dialog\r\n            fullWidth=\"sm\"\r\n            maxWidth=\"sm\"\r\n            open={open3}\r\n            onClose={() => setOpen3(false)}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n          >\r\n            {collectionDataLoader ? (\r\n              <DataLoading />\r\n            ) : (\r\n              <DialogContent>\r\n                <Box className=\"img-container\">\r\n                  {isVideo ? (\r\n                    <div>\r\n                      <video width=\"100%\" controls>\r\n                        <source\r\n                          src={collectionDetails?.mediaUrl}\r\n                          type=\"video/mp4\"\r\n                        />\r\n                      </video>\r\n                    </div>\r\n                  ) : (\r\n                    <img src={collectionDetails?.image} alt=\"\" />\r\n                  )}\r\n                </Box>\r\n\r\n                <Box mt={2}>\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                    <Grid item xs={6} align=\"left\">\r\n                      <Box className={classes.dialogProfileImage}>\r\n                        <Box className=\"userImage\">\r\n                          <img\r\n                            src={\r\n                              collectionDetails?.userId?.profilePic\r\n                                ? collectionDetails?.userId?.profilePic\r\n                                : \"/images/user.png\"\r\n                            }\r\n                            alt=\"user collectionDetails\"\r\n                          />\r\n                        </Box>\r\n                        <Box className=\"username\">\r\n                          <Typography variant=\"h6\" className={classes.text}>\r\n                            {collectionDetails?.userId?.userName\r\n                              ? collectionDetails?.userId?.userName\r\n                              : collectionDetails?.userId?.name}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6} align=\"right\">\r\n                      <Typography variant=\"body1\">\r\n                        Collection Price: &nbsp;\r\n                        <span\r\n                          style={{\r\n                            fontSize: \"14px\",\r\n                            color: \"#FFFFFF\",\r\n                            fontWeight: \"500\",\r\n                          }}\r\n                        >\r\n                          {collectionDetails?.amount > 1\r\n                            ? collectionDetails?.amount\r\n                            : Number(collectionDetails?.amount)?.toFixed(4)}\r\n                          &nbsp;\r\n                          {\"Share\"}\r\n                        </span>\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Box mt={1} className={classes.deskiText}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={12} align=\"left\">\r\n                        <Typography variant=\"h4\">\r\n                          Duration:{\" \"}\r\n                          <span>{collectionDetails?.duration}&nbsp; Days</span>\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">Details:</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h6\">\r\n                          {collectionDetails?.title}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n\r\n                  <Box mt={3} mb={3} textAlign=\"center\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"large\"\r\n                      onClick={() => {\r\n                        setOpen3(false);\r\n                      }}\r\n                      // disabled={isLoading}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </DialogContent>\r\n            )}\r\n          </Dialog>\r\n        )}\r\n        {open4 && (\r\n          <Dialog\r\n            fullWidth=\"sm\"\r\n            maxWidth=\"sm\"\r\n            open={open4}\r\n            onClose={() => setOpen4(false)}\r\n            aria-labelledby=\"max-width-dialog-title\"\r\n          >\r\n            {collectionDataLoader ? (\r\n              <DataLoading />\r\n            ) : (\r\n              <DialogContent>\r\n                <Box className=\"img-container\">\r\n                  {isVideo1 ? (\r\n                    <div>\r\n                      <video width=\"100%\" controls>\r\n                        <source\r\n                          src={promotionPostDetails?.mediaUrl}\r\n                          type=\"video/mp4\"\r\n                        />\r\n                      </video>\r\n                    </div>\r\n                  ) : (\r\n                    <img src={promotionPostDetails?.mediaUrl} alt=\"\" />\r\n                  )}\r\n                </Box>\r\n\r\n                <Box mt={2}>\r\n                  <Grid container spacing={1} alignItems=\"center\">\r\n                    <Grid item xs={6} align=\"left\">\r\n                      <Box className={classes.dialogProfileImage}>\r\n                        <Box className=\"userImage\">\r\n                          <img\r\n                            src={\r\n                              promotionPostDetails?.userId?.profilePic\r\n                                ? promotionPostDetails?.userId?.profilePic\r\n                                : \"/images/user.png\"\r\n                            }\r\n                            alt=\"user promotionPostDetails\"\r\n                          />\r\n                        </Box>\r\n                        <Box className=\"username\">\r\n                          <Typography variant=\"h6\" className={classes.text}>\r\n                            {promotionPostDetails?.userId?.userName\r\n                              ? promotionPostDetails?.userId?.userName\r\n                              : promotionPostDetails?.userId?.name}\r\n                          </Typography>\r\n                        </Box>\r\n                      </Box>\r\n                    </Grid>\r\n                    <Grid item xs={6} align=\"right\">\r\n                      <Typography variant=\"body1\">\r\n                        Collection Price: &nbsp;\r\n                        <span\r\n                          style={{\r\n                            fontSize: \"14px\",\r\n                            color: \"#FFFFFF\",\r\n                            fontWeight: \"500\",\r\n                          }}\r\n                        >\r\n                          {promotionPostDetails?.amount > 1\r\n                            ? promotionPostDetails?.amount\r\n                            : Number(promotionPostDetails?.amount)?.toFixed(4)}\r\n                          &nbsp;\r\n                          {\"Share\"}\r\n                        </span>\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Box mt={1} className={classes.deskiText}>\r\n                    <Grid container spacing={1}>\r\n                      <Grid item xs={12} align=\"left\">\r\n                        <Typography variant=\"h4\">\r\n                          Duration:{\" \"}\r\n                          <span>\r\n                            {promotionPostDetails?.dateTime}&nbsp; Days\r\n                          </span>\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item xs={12}>\r\n                        <Typography variant=\"h4\">Details:</Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Typography\r\n                          variant=\"h6\"\r\n                          style={{ wordBreak: \"break-all\" }}\r\n                        >\r\n                          {promotionPostDetails?.details}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n\r\n                  <Box mt={3} mb={3} textAlign=\"center\">\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      size=\"large\"\r\n                      onClick={() => {\r\n                        setOpen4(false);\r\n                      }}\r\n                      // disabled={isLoading}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </Box>\r\n                </Box>\r\n              </DialogContent>\r\n            )}\r\n          </Dialog>\r\n        )}\r\n        <Dialog\r\n          open={isHidePost}\r\n          onClose={() => setIsHidePost(false)}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              {/* {row.status} */}\r\n              {`Are you sure want to  delete this notifications?`}\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              color=\"secondary\"\r\n              variant=\"contained\"\r\n              // disabled={loader2}\r\n              onClick={deleteNotification}\r\n            >\r\n              Yes\r\n              {/* {loader2 && <ButtonCircularProgress />} */}\r\n            </Button>\r\n            <Button\r\n              onClick={() => setIsHidePost(false)}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              autoFocus\r\n            >\r\n              No\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default NotificationList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  makeStyles,\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Link,\r\n} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport { toast } from \"react-toastify\";\r\nimport { AuthContext } from \"src/context/Auth\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport NoDataFound from \"src/component/NoDataFound\";\r\nimport DataLoading from \"src/component/DataLoading\";\r\nimport { useHistory, Link as RouterComponent } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"15px\",\r\n    backgroundColor: \"#000000\",\r\n    \"& .heading\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      justifyContent: \"space-between\",\r\n      paddingBottom: \"15px\",\r\n      borderBottom: \"0.5px solid #737373\",\r\n    },\r\n  },\r\n  Users: {\r\n    width: \"100% !important\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    \"& .UserBox\": {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"10px 0px\",\r\n      \"& h6\": {\r\n        fontWeight: \"600\",\r\n      },\r\n      \"& small\": {\r\n        color: \"#BFBFBF\",\r\n      },\r\n      \"& .figure\": {\r\n        margin: \"0\",\r\n        marginRight: \"15px\",\r\n        position: \"relative\",\r\n        \"& .profileimage\": {\r\n          height: \"40px\",\r\n          width: \"40px\",\r\n          borderRadius: \"50%\",\r\n          overflow: \"hidden\",\r\n          backgroundColor: \"#101010\",\r\n          \"& img\": {\r\n            // width: \"auto\",\r\n            maxWidth: \"100%\",\r\n            // maxHeight: \"50px\",\r\n          },\r\n        },\r\n        \"& .vector\": {\r\n          position: \"absolute\",\r\n          top: \"-3px\",\r\n          right: \"-6px\",\r\n          \"& img\": {\r\n            width: \"auto\",\r\n            maxWidth: \"100%\",\r\n            maxHeight: \"35px\",\r\n          },\r\n        },\r\n      },\r\n    },\r\n    \"& .timeline\": {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      alignItems: \"center\",\r\n    },\r\n  },\r\n}));\r\n\r\n\r\nfunction Subscriber() {\r\n  const classes = useStyles();\r\n  const [dataList, setDataList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [followerListCount, setFollowerListCount] = useState();\r\n\r\n  const listPublicExclusiveHandler = async () => {\r\n    try {\r\n      // setIsLoading(true);\r\n      const res = await axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.listFollowerUser,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        setDataList(res.data.result.followers.slice(0, 6));\r\n        setFollowerListCount(res.data.result.count);\r\n        setIsLoading(false);\r\n      }\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    listPublicExclusiveHandler();\r\n  }, []);\r\n  return (\r\n    <>\r\n      <Paper className={classes.root} elevation={2}>\r\n        <Box className=\"heading\">\r\n          <Typography variant=\"h5\">\r\n            Subscriber\r\n          </Typography>\r\n          {dataList.length > 6 && (\r\n            <Link component={RouterComponent} to=\"/subscriber-list\"  style={{ color: \"#E31A89\" }}>\r\n              See All\r\n            </Link>\r\n          )}\r\n        </Box>\r\n        {isLoading ? (\r\n          <DataLoading />\r\n        ) : (\r\n          <Grid container direction={\"cloumn\"} spacing={1}>\r\n            {dataList && dataList.length > 0 ? (\r\n              <>\r\n                {dataList &&\r\n                  dataList?.map((data, i) => {\r\n                    return (\r\n                      <Grid item xs={12} key={i}>\r\n                        <Users\r\n                          isLoading={isLoading}\r\n                          data={data}\r\n                          type=\"data\"\r\n                          key={i}\r\n                        />\r\n                      </Grid>\r\n                    );\r\n                  })}\r\n              </>\r\n            ) : (\r\n              <NoDataFound />\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Subscriber;\r\n\r\nconst Users = (props) => {\r\n  const { data } = props;\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Box className={classes.Users}>\r\n        <Box className=\"UserBox\">\r\n          <Box className=\"figure\">\r\n            <Box className=\"profileimage\">\r\n              <img\r\n                src={data.profilePic ? data.profilePic : \"images/user.png\"}\r\n                alt=\"user data\"\r\n              />\r\n            </Box>\r\n            {/* <Box className=\"vector\">\r\n              <img src=\"images/Vector.png\" />\r\n            </Box> */}\r\n          </Box>\r\n          <Box className=\"timeline\">\r\n            <Typography\r\n              variant=\"h6\"\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={() => {\r\n                history.push({\r\n                  pathname: \"/about-creators\",\r\n                  search: data?._id,\r\n                });\r\n              }}\r\n            >\r\n              {data.userName ? data.userName : data.name}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { makeStyles, Box, Grid, Paper } from \"@material-ui/core\";\r\nimport NotificationList from \"./NotificationList\";\r\nimport Subscriber from \"./Subscriber\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    padding: \"25px\",\r\n    \"@media(max-width:767px)\": {\r\n      padding: \"8px\",\r\n    },\r\n  },\r\n}));\r\nfunction Index() {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Paper className={classes.root} elevation={2}>\r\n        <Grid container spacing={2}>\r\n          <Grid item lg={8} sm={12} md={7} xs={12}>\r\n            <NotificationList />\r\n          </Grid>\r\n          <Grid item lg={4} sm={12} md={5} xs={12}>\r\n            <Subscriber />\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Index;\r\n"],"sourceRoot":""}