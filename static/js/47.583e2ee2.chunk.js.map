{"version":3,"sources":["component/StoriesPages.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","padding","StoriesPages","props","setOpenCommentBox","openCommentBoxId","classes","location","useHistory","useLocation","useState","setIdd","storyData","ssetStoryData","viewUserStory","a","Axios","method","url","Apiconfigs","storyListWithFollowing","headers","token","window","localStorage","getItem","params","userId","res","data","responseCode","result","map","i","story","type","includes","useEffect","search","substring","length","id","pt","alignItems","pl","pr","src","alt","style","maxWidth","onClick","cursor","fontSize","className","keyboardNavigation","defaultInterval","stories","onStoryEnd","s","st","console","log","onAllStoriesEnd","onStoryStart"],"mappings":"6RAWMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,eAAgB,SAChBC,QAAS,SACT,kBAAmB,CACjBF,QAAS,aAiFAG,UA5EM,SAACC,GACpB,IAAQC,EAAwCD,EAAxCC,kBAAmBC,EAAqBF,EAArBE,iBACrBC,EAAUX,IAEVY,GADUC,cACCC,eACjB,EAAsBC,qBAAtB,mBAAYC,GAAZ,WACA,EAAmCD,qBAAnC,mBAAOE,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,uCAAG,4BAAAC,EAAA,+EAEAC,IAAM,CACtBC,OAAQ,MACRC,IAAKC,IAAWC,uBAChBC,QAAS,CACPC,MAAOC,OAAOC,aAAaC,QAAQ,UAErCC,OAAQ,CACNC,OAAQtB,KATM,OAYY,OAVxBuB,EAFY,QAYVC,KAAKC,cAEXjB,EACEe,EAAIC,KAAKE,OAAOC,KAAI,SAACH,EAAMI,GAAP,YAAc,CAChCf,IAAG,OAAEW,QAAF,IAAEA,OAAF,EAAEA,EAAMK,MAAM,GACjBC,MAAU,OAAJN,QAAI,IAAJA,GAAA,UAAAA,EAAMK,MAAM,UAAZ,eAAgBE,SAAS,SAAU,QAAU,aAjBvC,uGAAH,qDAmCnB,OAXAC,qBAAU,WACR,GAAI9B,EAAS+B,OAAOC,UAAU,EAAGhC,EAAS+B,OAAOE,QAAS,CACxD,IAAMC,EAAKlC,EAAS+B,OAAOC,UAAU,EAAGhC,EAAS+B,OAAOE,QACxD7B,EAAO8B,GAELpC,GACFS,MAED,CAACP,EAAS+B,OAAQjC,IAInB,kBAAC,IAAD,CAAKqC,GAAI,GACP,kBAAC,IAAD,CACE3C,QAAQ,OACRC,eAAe,gBACf2C,WAAW,SACXC,GAAI,EACJC,GAAI,GAGJ,yBAAKC,IAAI,mBAAmBC,IAAI,GAAGC,MAAO,CAAEC,SAAU,WACtD,kBAAC,IAAD,CACEC,QAAS,kBAAM9C,GAAkB,IACjC4C,MAAO,CAAEG,OAAQ,UAAWC,SAAU,WAG1C,kBAAC,IAAD,CAAKC,UAAW/C,EAAQR,MACrBc,GACC,kBAAC,IAAD,CAEE0C,oBAAkB,EAClBC,gBAAiB,IACjBC,QAAS5C,EACT6C,WAAY,SAACC,EAAGC,GAAJ,OAAWC,QAAQC,IAAI,cAAeH,EAAGC,IACrDG,gBAAiB,SAACJ,EAAGC,GAAJ,OAAWC,QAAQC,IAAI,oBAAqBH,EAAGC,IAChEI,aAAc,SAACL,EAAGC,GAAJ,OAAWC,QAAQC,IAAI,gBAAiBH,EAAGC","file":"static/js/47.583e2ee2.chunk.js","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Box, Paper, makeStyles } from \"@material-ui/core\";\r\nimport { CancelOutlined } from \"@material-ui/icons\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport Slider from \"react-slick\";\r\nimport Axios from \"axios\";\r\nimport Apiconfigs from \"src/ApiConfig/ApiConfig\";\r\nimport ButtonCircularProgress from \"./ButtonCircularProgress\";\r\nimport { toast } from \"react-toastify\";\r\nimport Stories, { WithSeeMore } from \"react-insta-stories\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\", \r\n    justifyContent: \"center\",\r\n    padding: \"10px 0\",\r\n    \"& .slick-cloned\": {\r\n      display: \"none\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst StoriesPages = (props) => {\r\n  const { setOpenCommentBox, openCommentBoxId } = props;\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [idd, setIdd] = useState();\r\n  const [storyData, ssetStoryData] = useState();\r\n\r\n  const viewUserStory = async () => {\r\n    try {\r\n      const res = await Axios({\r\n        method: \"GET\",\r\n        url: Apiconfigs.storyListWithFollowing,\r\n        headers: {\r\n          token: window.localStorage.getItem(\"token\"),\r\n        },\r\n        params: {\r\n          userId: openCommentBoxId,\r\n        },\r\n      });\r\n      if (res.data.responseCode === 200) {\r\n        // toast.success(res.data.responseMessage);\r\n        ssetStoryData(\r\n          res.data.result.map((data, i) => ({\r\n            url: data?.story[0],\r\n            type: data?.story[0]?.includes(\".mp4\") ? \"video\" : \"image\",\r\n          }))\r\n        );\r\n      }\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.search.substring(1, location.search.length)) {\r\n      const id = location.search.substring(1, location.search.length);\r\n      setIdd(id);\r\n    }\r\n    if (openCommentBoxId) {\r\n      viewUserStory();\r\n    }\r\n  }, [location.search, openCommentBoxId]);\r\n\r\n\r\n  return (\r\n    <Box pt={3}>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        pl={3}\r\n        pr={3}\r\n      >\r\n        {/* <Typography variant=\"body1\">ShareChing</Typography> */}\r\n        <img src=\"/images/logo.png\" alt=\"\" style={{ maxWidth: \"180px\" }} />\r\n        <CancelOutlined\r\n          onClick={() => setOpenCommentBox(false)}\r\n          style={{ cursor: \"pointer\", fontSize: \"30px\" }}\r\n        />\r\n      </Box>\r\n      <Box className={classes.root} >\r\n        {storyData && (\r\n          <Stories\r\n            // loop\r\n            keyboardNavigation\r\n            defaultInterval={5000}\r\n            stories={storyData}\r\n            onStoryEnd={(s, st) => console.log(\"story ended\", s, st)}\r\n            onAllStoriesEnd={(s, st) => console.log(\"all stories ended\", s, st)}\r\n            onStoryStart={(s, st) => console.log(\"story started\", s, st)}\r\n          />\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StoriesPages;\r\n"],"sourceRoot":""}